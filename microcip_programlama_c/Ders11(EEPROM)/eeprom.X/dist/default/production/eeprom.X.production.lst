

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Dec 27 22:22:10 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F84A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x4E,2
    13  0000                     
    14                           ; Version 2.20
    15                           ; Generated 12/02/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F84A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  0081                     	;# 
    60  0085                     	;# 
    61  0086                     	;# 
    62  0088                     	;# 
    63  0089                     	;# 
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  0081                     	;# 
    76  0085                     	;# 
    77  0086                     	;# 
    78  0088                     	;# 
    79  0089                     	;# 
    80  0008                     _EEDATA	set	8
    81  0006                     _PORTB	set	6
    82  0009                     _EEADR	set	9
    83  005F                     _GIE	set	95
    84  0028                     _RA0	set	40
    85  005E                     _EEIE	set	94
    86  0089                     _EECON2	set	137
    87  0086                     _TRISB	set	134
    88  0085                     _TRISA	set	133
    89  0441                     _WR	set	1089
    90  0442                     _WREN	set	1090
    91  0440                     _RD	set	1088
    92  0444                     _EEIF	set	1092
    93                           
    94                           	psect	cinit
    95  000C                     start_initialization:	
    96                           ; #config settings
    97                           
    98  000C                     __initialization:
    99                           
   100                           ; Clear objects allocated to BANK0
   101  000C  1283               	bcf	3,5	;RP0=0, select bank0
   102  000D  018C               	clrf	__pbssBANK0& (0+127)
   103  000E  018D               	clrf	(__pbssBANK0+1)& (0+127)
   104  000F                     end_of_initialization:	
   105                           ;End of C runtime variable initialization code
   106                           
   107  000F                     __end_of__initialization:
   108  000F  0183               	clrf	3
   109  0010  2811               	ljmp	_main	;jump to C main() function
   110                           
   111                           	psect	bssBANK0
   112  000C                     __pbssBANK0:
   113  000C                     _count:
   114  000C                     	ds	2
   115                           
   116                           	psect	cstackCOMMON
   117  0000                     __pcstackCOMMON:
   118  0000                     ??_main:
   119                           
   120                           	psect	cstackBANK0
   121  000E                     __pcstackBANK0:	
   122                           ; 1 bytes @ 0x0
   123                           
   124  000E                     ?_interrupt_function:
   125  000E                     ??_interrupt_function:	
   126                           ; 1 bytes @ 0x0
   127                           
   128  000E                     ?_main:	
   129                           ; 1 bytes @ 0x0
   130                           
   131                           
   132                           ; 1 bytes @ 0x0
   133  000E                     	ds	2
   134                           
   135                           	psect	maintext
   136  0011                     __pmaintext:	
   137 ;;
   138 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   139 ;;
   140 ;; *************** function _main *****************
   141 ;; Defined at:
   142 ;;		line 56 in file "eeprom.c"
   143 ;; Parameters:    Size  Location     Type
   144 ;;		None
   145 ;; Auto vars:     Size  Location     Type
   146 ;;		None
   147 ;; Return value:  Size  Location     Type
   148 ;;                  1    wreg      void 
   149 ;; Registers used:
   150 ;;		wreg, status,2
   151 ;; Tracked objects:
   152 ;;		On entry : B00/0
   153 ;;		On exit  : 0/0
   154 ;;		Unchanged: 0/0
   155 ;; Data sizes:     COMMON   BANK0
   156 ;;      Params:         0       0
   157 ;;      Locals:         0       0
   158 ;;      Temps:          0       0
   159 ;;      Totals:         0       0
   160 ;;Total ram usage:        0 bytes
   161 ;; Hardware stack levels required when called: 1
   162 ;; This function calls:
   163 ;;		Nothing
   164 ;; This function is called by:
   165 ;;		Startup code after reset
   166 ;; This function uses a non-reentrant model
   167 ;;
   168                           
   169                           
   170                           ;psect for function _main
   171  0011                     _main:
   172  0011                     l674:	
   173                           ;incstack = 0
   174                           ; Regs used in _main: [wreg+status,2]
   175                           
   176  0011  170B               	bsf	11,6	;volatile
   177  0012                     l676:
   178  0012  3001               	movlw	1
   179  0013  1683               	bsf	3,5	;RP0=1, select bank1
   180  0014  0085               	movwf	5	;volatile
   181  0015                     l678:
   182  0015  0186               	clrf	6	;volatile
   183  0016                     l680:
   184  0016  1283               	bcf	3,5	;RP0=0, select bank0
   185  0017  0186               	clrf	6	;volatile
   186  0018                     l682:
   187  0018  1283               	bcf	3,5	;RP0=0, select bank0
   188  0019  1C05               	btfss	5,0	;volatile
   189  001A  281C               	goto	u51
   190  001B  281D               	goto	u50
   191  001C                     u51:
   192  001C  2818               	goto	l682
   193  001D                     u50:
   194  001D                     l41:
   195  001D  1805               	btfsc	5,0	;volatile
   196  001E  2820               	goto	u61
   197  001F  2821               	goto	u60
   198  0020                     u61:
   199  0020  281D               	goto	l41
   200  0021                     u60:
   201  0021                     l686:
   202  0021  3001               	movlw	1
   203  0022  078C               	addwf	_count,f
   204  0023  1803               	skipnc
   205  0024  0A8D               	incf	_count+1,f
   206  0025  3000               	movlw	0
   207  0026  078D               	addwf	_count+1,f
   208  0027  301F               	movlw	31
   209  0028  0089               	movwf	9	;volatile
   210  0029  080C               	movf	_count,w
   211  002A  0088               	movwf	8	;volatile
   212  002B                     l688:
   213  002B  1683               	bsf	3,5	;RP0=1, select bank1
   214  002C  1508               	bsf	8,2	;volsfr
   215  002D  3055               	movlw	85
   216  002E  0089               	movwf	9	;volsfr
   217  002F  30AA               	movlw	170
   218  0030  0089               	movwf	9	;volsfr
   219  0031                     l690:
   220  0031  1488               	bsf	8,1	;volsfr
   221  0032                     l692:
   222  0032  178B               	bsf	11,7	;volatile
   223  0033  2818               	goto	l682
   224  0034  280B               	ljmp	start
   225  0035                     __end_of_main:
   226                           
   227                           	psect	text1
   228  0035                     __ptext1:	
   229 ;; *************** function _interrupt_function *****************
   230 ;; Defined at:
   231 ;;		line 46 in file "eeprom.c"
   232 ;; Parameters:    Size  Location     Type
   233 ;;		None
   234 ;; Auto vars:     Size  Location     Type
   235 ;;		None
   236 ;; Return value:  Size  Location     Type
   237 ;;                  1    wreg      void 
   238 ;; Registers used:
   239 ;;		wreg
   240 ;; Tracked objects:
   241 ;;		On entry : 0/0
   242 ;;		On exit  : 0/0
   243 ;;		Unchanged: 0/0
   244 ;; Data sizes:     COMMON   BANK0
   245 ;;      Params:         0       0
   246 ;;      Locals:         0       0
   247 ;;      Temps:          0       2
   248 ;;      Totals:         0       2
   249 ;;Total ram usage:        2 bytes
   250 ;; Hardware stack levels used: 1
   251 ;; This function calls:
   252 ;;		Nothing
   253 ;; This function is called by:
   254 ;;		Interrupt level 1
   255 ;; This function uses a non-reentrant model
   256 ;;
   257                           
   258                           
   259                           ;psect for function _interrupt_function
   260  0035                     _interrupt_function:
   261  0035                     i1l666:
   262  0035  1683               	bsf	3,5	;RP0=1, select bank1
   263  0036  1E08               	btfss	8,4	;volsfr
   264  0037  2839               	goto	u4_21
   265  0038  283A               	goto	u4_20
   266  0039                     u4_21:
   267  0039  2842               	goto	i1l672
   268  003A                     u4_20:
   269  003A                     i1l668:
   270  003A  301F               	movlw	31
   271  003B  1283               	bcf	3,5	;RP0=0, select bank0
   272  003C  0089               	movwf	9	;volatile
   273  003D                     i1l670:
   274  003D  1683               	bsf	3,5	;RP0=1, select bank1
   275  003E  1408               	bsf	8,0	;volsfr
   276  003F  1283               	bcf	3,5	;RP0=0, select bank0
   277  0040  0808               	movf	8,w	;volatile
   278  0041  0086               	movwf	6	;volatile
   279  0042                     i1l672:
   280  0042  1683               	bsf	3,5	;RP0=1, select bank1
   281  0043  1208               	bcf	8,4	;volsfr
   282  0044                     i1l34:
   283  0044  1283               	bcf	3,5	;RP0=0, select bank0
   284  0045  080F               	movf	??_interrupt_function+1,w
   285  0046  008A               	movwf	10
   286  0047  0E0E               	swapf	??_interrupt_function,w
   287  0048  0083               	movwf	3
   288  0049  0ECE               	swapf	btemp,f
   289  004A  0E4E               	swapf	btemp,w
   290  004B  0009               	retfie
   291  004C                     __end_of_interrupt_function:
   292  004E                     btemp	set	78	;btemp
   293  004E                     wtemp0	set	78
   294                           
   295                           	psect	intentry
   296  0004                     __pintentry:	
   297                           ;incstack = 0
   298                           ; Regs used in _interrupt_function: [wreg]
   299                           
   300  0004                     interrupt_function:
   301  004E                     saved_w	set	btemp
   302  0004  00CE               	movwf	btemp
   303  0005  0E03               	swapf	3,w
   304  0006  1283               	bcf	3,5	;RP0=0, select bank0
   305  0007  008E               	movwf	??_interrupt_function
   306  0008  080A               	movf	10,w
   307  0009  008F               	movwf	??_interrupt_function+1
   308  000A  2835               	ljmp	_interrupt_function
   309                           
   310                           	psect	config
   311                           
   312                           ;Config register CONFIG @ 0x2007
   313                           ;	Oscillator Selection bits
   314                           ;	FOSC = XT, XT oscillator
   315                           ;	Watchdog Timer
   316                           ;	WDTE = OFF, WDT disabled
   317                           ;	Power-up Timer Enable bit
   318                           ;	PWRTE = OFF, Power-up Timer is disabled
   319                           ;	Code Protection bit
   320                           ;	CP = OFF, Code protection disabled
   321  2007                     	org	8199
   322  2007  3FF9               	dw	16377

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            66      2       4

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _interrupt_function in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _interrupt_function in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _interrupt_function                                   2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _interrupt_function (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              40      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               42      2       4       3        6.1%
ABS                  0      0       4       4        0.0%
BITBANK0            42      0       0       5        0.0%
DATA                 0      0       4       6        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Dec 27 22:22:10 2021

                         l41 001D                           _RD 0440                           u50 001D  
                         u51 001C                           u60 0021                           u61 0020  
                         _WR 0441                          l680 0016                          l690 0031  
                        l682 0018                          l674 0011                          l692 0032  
                        l676 0012                          l686 0021                          l678 0015  
                        l688 002B                          _GIE 005F                          _RA0 0028  
                       _EEIE 005E                         _EEIF 0444                         i1l34 0044  
                       _WREN 0442                         u4_20 003A                         u4_21 0039  
                       _main 0011                         btemp 004E                         start 000B  
                      ?_main 000E                        _EEADR 0009                        i1l670 003D  
                      i1l672 0042                        i1l666 0035                        i1l668 003A  
                      _PORTB 0006                        _TRISA 0085                        _TRISB 0086  
 __end_of_interrupt_function 004C                        _count 000C                        pclath 000A  
                      status 0003                        wtemp0 004E              __initialization 000C  
               __end_of_main 0035                       ??_main 0000                       _EEDATA 0008  
                     _EECON2 0089                       saved_w 004E      __end_of__initialization 000F  
             __pcstackCOMMON 0000                   __pbssBANK0 000C                   __pmaintext 0011  
                 __pintentry 0004           _interrupt_function 0035          ?_interrupt_function 000E  
                    __ptext1 0035         end_of_initialization 000F         ??_interrupt_function 000E  
        start_initialization 000C                    ___latbits 0000                __pcstackBANK0 000E  
          interrupt_function 0004  __size_of_interrupt_function 0017                __size_of_main 0024  
                   intlevel1 0000  

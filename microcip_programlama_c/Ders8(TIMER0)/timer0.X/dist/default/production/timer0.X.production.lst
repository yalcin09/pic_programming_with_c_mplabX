

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Dec 27 13:09:38 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F84A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x4E,2
    13  0000                     
    14                           ; Version 2.20
    15                           ; Generated 12/02/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F84A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  0081                     	;# 
    60  0085                     	;# 
    61  0086                     	;# 
    62  0088                     	;# 
    63  0089                     	;# 
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  0081                     	;# 
    76  0085                     	;# 
    77  0086                     	;# 
    78  0088                     	;# 
    79  0089                     	;# 
    80  0006                     _PORTB	set	6
    81  0001                     _TMR0	set	1
    82  005D                     _T0IE	set	93
    83  005F                     _GIE	set	95
    84  0030                     _RB0	set	48
    85  005A                     _T0IF	set	90
    86  0086                     _TRISB	set	134
    87  0081                     _OPTION_REG	set	129
    88                           
    89                           	psect	cinit
    90  000C                     start_initialization:	
    91                           ; #config settings
    92                           
    93  000C                     __initialization:
    94                           
    95                           ; Clear objects allocated to BANK0
    96  000C  1283               	bcf	3,5	;RP0=0, select bank0
    97  000D  018C               	clrf	__pbssBANK0& (0+127)
    98  000E  018D               	clrf	(__pbssBANK0+1)& (0+127)
    99  000F                     end_of_initialization:	
   100                           ;End of C runtime variable initialization code
   101                           
   102  000F                     __end_of__initialization:
   103  000F  0183               	clrf	3
   104  0010  2830               	ljmp	_main	;jump to C main() function
   105                           
   106                           	psect	bssBANK0
   107  000C                     __pbssBANK0:
   108  000C                     _sayac:
   109  000C                     	ds	2
   110                           
   111                           	psect	cstackCOMMON
   112  0000                     __pcstackCOMMON:
   113  0000                     ??_main:
   114                           
   115                           	psect	cstackBANK0
   116  000E                     __pcstackBANK0:	
   117                           ; 1 bytes @ 0x0
   118                           
   119  000E                     ?_interrupt_funciton:
   120  000E                     ??_interrupt_funciton:	
   121                           ; 1 bytes @ 0x0
   122                           
   123  000E                     ?_main:	
   124                           ; 1 bytes @ 0x0
   125                           
   126                           
   127                           ; 1 bytes @ 0x0
   128  000E                     	ds	2
   129                           
   130                           	psect	maintext
   131  0030                     __pmaintext:	
   132 ;;
   133 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   134 ;;
   135 ;; *************** function _main *****************
   136 ;; Defined at:
   137 ;;		line 85 in file "timer0.c"
   138 ;; Parameters:    Size  Location     Type
   139 ;;		None
   140 ;; Auto vars:     Size  Location     Type
   141 ;;		None
   142 ;; Return value:  Size  Location     Type
   143 ;;                  1    wreg      void 
   144 ;; Registers used:
   145 ;;		wreg, status,2
   146 ;; Tracked objects:
   147 ;;		On entry : B00/0
   148 ;;		On exit  : 0/0
   149 ;;		Unchanged: 0/0
   150 ;; Data sizes:     COMMON   BANK0
   151 ;;      Params:         0       0
   152 ;;      Locals:         0       0
   153 ;;      Temps:          0       0
   154 ;;      Totals:         0       0
   155 ;;Total ram usage:        0 bytes
   156 ;; Hardware stack levels required when called: 1
   157 ;; This function calls:
   158 ;;		Nothing
   159 ;; This function is called by:
   160 ;;		Startup code after reset
   161 ;; This function uses a non-reentrant model
   162 ;;
   163                           
   164                           
   165                           ;psect for function _main
   166  0030                     _main:
   167  0030                     l661:	
   168                           ;incstack = 0
   169                           ; Regs used in _main: [wreg+status,2]
   170                           
   171  0030  178B               	bsf	11,7	;volatile
   172  0031  168B               	bsf	11,5	;volatile
   173  0032                     l663:
   174  0032  303D               	movlw	61
   175  0033  1283               	bcf	3,5	;RP0=0, select bank0
   176  0034  0081               	movwf	1	;volatile
   177  0035  3007               	movlw	7
   178  0036  1683               	bsf	3,5	;RP0=1, select bank1
   179  0037  0081               	movwf	1	;volatile
   180  0038                     l665:
   181  0038  0186               	clrf	6	;volatile
   182  0039                     l667:
   183  0039  1283               	bcf	3,5	;RP0=0, select bank0
   184  003A  0186               	clrf	6	;volatile
   185  003B                     l30:
   186  003B                     l31:
   187  003B  283B               	goto	l30
   188  003C  280B               	ljmp	start
   189  003D                     __end_of_main:
   190                           
   191                           	psect	text1
   192  0011                     __ptext1:	
   193 ;; *************** function _interrupt_funciton *****************
   194 ;; Defined at:
   195 ;;		line 70 in file "timer0.c"
   196 ;; Parameters:    Size  Location     Type
   197 ;;		None
   198 ;; Auto vars:     Size  Location     Type
   199 ;;		None
   200 ;; Return value:  Size  Location     Type
   201 ;;                  1    wreg      void 
   202 ;; Registers used:
   203 ;;		wreg, status,2, status,0
   204 ;; Tracked objects:
   205 ;;		On entry : 0/0
   206 ;;		On exit  : 0/0
   207 ;;		Unchanged: 0/0
   208 ;; Data sizes:     COMMON   BANK0
   209 ;;      Params:         0       0
   210 ;;      Locals:         0       0
   211 ;;      Temps:          0       2
   212 ;;      Totals:         0       2
   213 ;;Total ram usage:        2 bytes
   214 ;; Hardware stack levels used: 1
   215 ;; This function calls:
   216 ;;		Nothing
   217 ;; This function is called by:
   218 ;;		Interrupt level 1
   219 ;; This function uses a non-reentrant model
   220 ;;
   221                           
   222                           
   223                           ;psect for function _interrupt_funciton
   224  0011                     _interrupt_funciton:
   225  0011                     i1l647:
   226  0011  1D0B               	btfss	11,2	;volatile
   227  0012  2814               	goto	u3_21
   228  0013  2815               	goto	u3_20
   229  0014                     u3_21:
   230  0014  2826               	goto	i1l657
   231  0015                     u3_20:
   232  0015                     i1l649:
   233  0015  3001               	movlw	1
   234  0016  078C               	addwf	_sayac,f
   235  0017  1803               	skipnc
   236  0018  0A8D               	incf	_sayac+1,f
   237  0019  3000               	movlw	0
   238  001A  078D               	addwf	_sayac+1,f
   239  001B                     i1l651:
   240  001B  300A               	movlw	10
   241  001C  060C               	xorwf	_sayac,w
   242  001D  040D               	iorwf	_sayac+1,w
   243  001E  1D03               	btfss	3,2
   244  001F  2821               	goto	u4_21
   245  0020  2822               	goto	u4_20
   246  0021                     u4_21:
   247  0021  2826               	goto	i1l657
   248  0022                     u4_20:
   249  0022                     i1l653:
   250  0022  018C               	clrf	_sayac
   251  0023  018D               	clrf	_sayac+1
   252  0024                     i1l655:
   253  0024  3001               	movlw	1
   254  0025  0686               	xorwf	6,f
   255  0026                     i1l657:
   256  0026  110B               	bcf	11,2	;volatile
   257  0027                     i1l659:
   258  0027  303D               	movlw	61
   259  0028  0081               	movwf	1	;volatile
   260  0029                     i1l25:
   261  0029  080F               	movf	??_interrupt_funciton+1,w
   262  002A  008A               	movwf	10
   263  002B  0E0E               	swapf	??_interrupt_funciton,w
   264  002C  0083               	movwf	3
   265  002D  0ECE               	swapf	btemp,f
   266  002E  0E4E               	swapf	btemp,w
   267  002F  0009               	retfie
   268  0030                     __end_of_interrupt_funciton:
   269  004E                     btemp	set	78	;btemp
   270  004E                     wtemp0	set	78
   271                           
   272                           	psect	intentry
   273  0004                     __pintentry:	
   274                           ;incstack = 0
   275                           ; Regs used in _interrupt_funciton: [wreg+status,2+status,0]
   276                           
   277  0004                     interrupt_function:
   278  004E                     saved_w	set	btemp
   279  0004  00CE               	movwf	btemp
   280  0005  0E03               	swapf	3,w
   281  0006  1283               	bcf	3,5	;RP0=0, select bank0
   282  0007  008E               	movwf	??_interrupt_funciton
   283  0008  080A               	movf	10,w
   284  0009  008F               	movwf	??_interrupt_funciton+1
   285  000A  2811               	ljmp	_interrupt_funciton
   286                           
   287                           	psect	config
   288                           
   289                           ;Config register CONFIG @ 0x2007
   290                           ;	Oscillator Selection bits
   291                           ;	FOSC = XT, XT oscillator
   292                           ;	Watchdog Timer
   293                           ;	WDTE = OFF, WDT disabled
   294                           ;	Power-up Timer Enable bit
   295                           ;	PWRTE = OFF, Power-up Timer is disabled
   296                           ;	Code Protection bit
   297                           ;	CP = OFF, Code protection disabled
   298  2007                     	org	8199
   299  2007  3FF9               	dw	16377

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            66      2       4

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _interrupt_funciton in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _interrupt_funciton in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _interrupt_funciton                                   2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _interrupt_funciton (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              40      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               42      2       4       3        6.1%
ABS                  0      0       4       4        0.0%
BITBANK0            42      0       0       5        0.0%
DATA                 0      0       4       6        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Dec 27 13:09:38 2021

                         l30 003B                           l31 003B                          l661 0030  
                        l663 0032                          l665 0038                          l667 0039  
                        _GIE 005F                          _RB0 0030                         _T0IE 005D  
                       _T0IF 005A                         i1l25 0029                         _TMR0 0001  
                       u3_20 0015                         u3_21 0014                         u4_20 0022  
                       u4_21 0021                         _main 0030                         btemp 004E  
                       start 000B                        ?_main 000E                        i1l651 001B  
                      i1l653 0022                        i1l655 0024                        i1l647 0011  
                      i1l649 0015                        i1l657 0026                        i1l659 0027  
                      _PORTB 0006                        _TRISB 0086   __end_of_interrupt_funciton 0030  
                      _sayac 000C                        pclath 000A                        status 0003  
                      wtemp0 004E              __initialization 000C                 __end_of_main 003D  
                     ??_main 0000                       saved_w 004E      __end_of__initialization 000F  
             __pcstackCOMMON 0000                   __pbssBANK0 000C                   __pmaintext 0030  
                 __pintentry 0004           _interrupt_funciton 0011          ?_interrupt_funciton 000E  
                    __ptext1 0011         end_of_initialization 000F         ??_interrupt_funciton 000E  
        start_initialization 000C                    ___latbits 0000                __pcstackBANK0 000E  
          interrupt_function 0004  __size_of_interrupt_funciton 001F                __size_of_main 000D  
                   intlevel1 0000                   _OPTION_REG 0081  



Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Dec 30 15:44:49 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.20
    19                           ; Generated 12/02/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F877 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0098                     	;# 
   101  0099                     	;# 
   102  009E                     	;# 
   103  009F                     	;# 
   104  010C                     	;# 
   105  010D                     	;# 
   106  010E                     	;# 
   107  010F                     	;# 
   108  018C                     	;# 
   109  018D                     	;# 
   110  0000                     	;# 
   111  0001                     	;# 
   112  0002                     	;# 
   113  0003                     	;# 
   114  0004                     	;# 
   115  0005                     	;# 
   116  0006                     	;# 
   117  0007                     	;# 
   118  0008                     	;# 
   119  0009                     	;# 
   120  000A                     	;# 
   121  000B                     	;# 
   122  000C                     	;# 
   123  000D                     	;# 
   124  000E                     	;# 
   125  000E                     	;# 
   126  000F                     	;# 
   127  0010                     	;# 
   128  0011                     	;# 
   129  0012                     	;# 
   130  0013                     	;# 
   131  0014                     	;# 
   132  0015                     	;# 
   133  0015                     	;# 
   134  0016                     	;# 
   135  0017                     	;# 
   136  0018                     	;# 
   137  0019                     	;# 
   138  001A                     	;# 
   139  001B                     	;# 
   140  001B                     	;# 
   141  001C                     	;# 
   142  001D                     	;# 
   143  001E                     	;# 
   144  001F                     	;# 
   145  0081                     	;# 
   146  0085                     	;# 
   147  0086                     	;# 
   148  0087                     	;# 
   149  0088                     	;# 
   150  0089                     	;# 
   151  008C                     	;# 
   152  008D                     	;# 
   153  008E                     	;# 
   154  0091                     	;# 
   155  0092                     	;# 
   156  0093                     	;# 
   157  0094                     	;# 
   158  0098                     	;# 
   159  0099                     	;# 
   160  009E                     	;# 
   161  009F                     	;# 
   162  010C                     	;# 
   163  010D                     	;# 
   164  010E                     	;# 
   165  010F                     	;# 
   166  018C                     	;# 
   167  018D                     	;# 
   168                           
   169                           	psect	idataBANK0
   170  0176                     __pidataBANK0:
   171                           
   172                           ;initializer for _keypad_array
   173  0176  3411               	retlw	17
   174  0177  3400               	retlw	0
   175  0178  3412               	retlw	18
   176  0179  3400               	retlw	0
   177  017A  3414               	retlw	20
   178  017B  3400               	retlw	0
   179  017C  3421               	retlw	33
   180  017D  3400               	retlw	0
   181  017E  3422               	retlw	34
   182  017F  3400               	retlw	0
   183  0180  3424               	retlw	36
   184  0181  3400               	retlw	0
   185  0182  3441               	retlw	65
   186  0183  3400               	retlw	0
   187  0184  3442               	retlw	66
   188  0185  3400               	retlw	0
   189  0186  3444               	retlw	68
   190  0187  3400               	retlw	0
   191  0188  3481               	retlw	129
   192  0189  3400               	retlw	0
   193  018A  3482               	retlw	130
   194  018B  3400               	retlw	0
   195  018C  3484               	retlw	132
   196  018D  3400               	retlw	0
   197                           
   198                           ;initializer for _display_array
   199  018E  343F               	retlw	63
   200  018F  3400               	retlw	0
   201  0190  3406               	retlw	6
   202  0191  3400               	retlw	0
   203  0192  345B               	retlw	91
   204  0193  3400               	retlw	0
   205  0194  344F               	retlw	79
   206  0195  3400               	retlw	0
   207  0196  3466               	retlw	102
   208  0197  3400               	retlw	0
   209  0198  346D               	retlw	109
   210  0199  3400               	retlw	0
   211  019A  347C               	retlw	124
   212  019B  3400               	retlw	0
   213  019C  3407               	retlw	7
   214  019D  3400               	retlw	0
   215  019E  347F               	retlw	127
   216  019F  3400               	retlw	0
   217  01A0  346F               	retlw	111
   218  01A1  3400               	retlw	0
   219                           
   220                           ;initializer for _numbers
   221  01A2  343F               	retlw	63
   222  01A3  3400               	retlw	0
   223  01A4  343F               	retlw	63
   224  01A5  3400               	retlw	0
   225  01A6  343F               	retlw	63
   226  01A7  3400               	retlw	0
   227  01A8  343F               	retlw	63
   228  01A9  3400               	retlw	0
   229  000E                     _TMR1	set	14
   230  0001                     _TMR0	set	1
   231  0007                     _PORTC	set	7
   232  0008                     _PORTD	set	8
   233  0006                     _PORTB	set	6
   234  0080                     _TMR1ON	set	128
   235  0081                     _TMR1CS	set	129
   236  0084                     _T1CKPS0	set	132
   237  0085                     _T1CKPS1	set	133
   238  005B                     _RBIE	set	91
   239  005E                     _PEIE	set	94
   240  005F                     _GIE	set	95
   241  003C                     _RC4	set	60
   242  0033                     _RB3	set	51
   243  0060                     _TMR1IF	set	96
   244  0058                     _RBIF	set	88
   245  0088                     _TRISD	set	136
   246  0087                     _TRISC	set	135
   247  0086                     _TRISB	set	134
   248  0460                     _TMR1IE	set	1120
   249                           
   250                           	psect	cinit
   251  0015                     start_initialization:	
   252                           ; #config settings
   253                           
   254  0015                     __initialization:
   255                           
   256                           ; Initialize objects allocated to BANK0
   257  0015  1383               	bcf	3,7	;select IRP bank0
   258  0016  3054               	movlw	low (__pdataBANK0+52)
   259  0017  00FD               	movwf	btemp+-1
   260  0018  3001               	movlw	high __pidataBANK0
   261  0019  00FE               	movwf	btemp
   262  001A  3076               	movlw	low __pidataBANK0
   263  001B  00FF               	movwf	btemp+1
   264  001C  3020               	movlw	low __pdataBANK0
   265  001D  0084               	movwf	4
   266  001E  120A  118A  21D0  120A  118A  	fcall	init_ram0
   267                           
   268                           ; Clear objects allocated to BANK0
   269  0023  01D4               	clrf	__pbssBANK0& (0+127)
   270  0024  01D5               	clrf	(__pbssBANK0+1)& (0+127)
   271                           
   272                           ; Clear objects allocated to COMMON
   273  0025  01FB               	clrf	__pbssCOMMON& (0+127)
   274  0026  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   275  0027                     end_of_initialization:	
   276                           ;End of C runtime variable initialization code
   277                           
   278  0027                     __end_of__initialization:
   279  0027  0183               	clrf	3
   280  0028  120A  118A  29AA   	ljmp	_main	;jump to C main() function
   281                           
   282                           	psect	bssCOMMON
   283  007B                     __pbssCOMMON:
   284  007B                     _step:
   285  007B                     	ds	2
   286                           
   287                           	psect	bssBANK0
   288  0054                     __pbssBANK0:
   289  0054                     _count:
   290  0054                     	ds	2
   291                           
   292                           	psect	dataBANK0
   293  0020                     __pdataBANK0:
   294  0020                     _keypad_array:
   295  0020                     	ds	24
   296  0038                     _display_array:
   297  0038                     	ds	20
   298  004C                     _numbers:
   299  004C                     	ds	8
   300                           
   301                           	psect	inittext
   302  01CC                     init_fetch0:	
   303                           ;	Called with low address in FSR and high address in W
   304                           
   305  01CC  087E               	movf	btemp,w
   306  01CD  008A               	movwf	10
   307  01CE  087F               	movf	btemp+1,w
   308  01CF  0082               	movwf	2
   309  01D0                     init_ram0:	
   310                           ;Called with:
   311                           ;	high address of idata address in btemp 
   312                           ;	low address of idata address in btemp+1 
   313                           ;	low address of data in FSR
   314                           ;	high address + 1 of data in btemp-1
   315                           
   316  01D0  120A  118A  21CC  120A  118A  	fcall	init_fetch0
   317  01D5  0080               	movwf	0
   318  01D6  0A84               	incf	4,f
   319  01D7  0804               	movf	4,w
   320  01D8  067D               	xorwf	btemp+-1,w
   321  01D9  1903               	btfsc	3,2
   322  01DA  3400               	retlw	0
   323  01DB  0AFF               	incf	btemp+1,f
   324  01DC  1903               	btfsc	3,2
   325  01DD  0AFE               	incf	btemp,f
   326  01DE  29D0               	goto	init_ram0
   327                           
   328                           	psect	cstackCOMMON
   329  0070                     __pcstackCOMMON:
   330  0070                     ?_interrupt_function:
   331  0070                     ??_interrupt_function:	
   332                           ; 1 bytes @ 0x0
   333                           
   334  0070                     ?_main:	
   335                           ; 1 bytes @ 0x0
   336                           
   337                           
   338                           ; 1 bytes @ 0x0
   339  0070                     	ds	9
   340  0079                     interrupt_function@number:
   341                           
   342                           ; 2 bytes @ 0x9
   343  0079                     	ds	2
   344                           
   345                           	psect	cstackBANK0
   346  0000                     __pcstackBANK0:
   347  0000                     ??_main:
   348                           
   349                           	psect	maintext
   350  01AA                     __pmaintext:	
   351                           ; 1 bytes @ 0x0
   352 ;;
   353 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   354 ;;
   355 ;; *************** function _main *****************
   356 ;; Defined at:
   357 ;;		line 112 in file "cod.c"
   358 ;; Parameters:    Size  Location     Type
   359 ;;		None
   360 ;; Auto vars:     Size  Location     Type
   361 ;;		None
   362 ;; Return value:  Size  Location     Type
   363 ;;                  1    wreg      void 
   364 ;; Registers used:
   365 ;;		wreg, status,2
   366 ;; Tracked objects:
   367 ;;		On entry : B00/0
   368 ;;		On exit  : 0/0
   369 ;;		Unchanged: 0/0
   370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   371 ;;      Params:         0       0       0       0       0
   372 ;;      Locals:         0       0       0       0       0
   373 ;;      Temps:          0       0       0       0       0
   374 ;;      Totals:         0       0       0       0       0
   375 ;;Total ram usage:        0 bytes
   376 ;; Hardware stack levels required when called: 1
   377 ;; This function calls:
   378 ;;		Nothing
   379 ;; This function is called by:
   380 ;;		Startup code after reset
   381 ;; This function uses a non-reentrant model
   382 ;;
   383                           
   384                           
   385                           ;psect for function _main
   386  01AA                     _main:
   387  01AA                     l885:	
   388                           ;incstack = 0
   389                           ; Regs used in _main: [wreg+status,2]
   390                           
   391                           
   392                           ;cod.c: 114:     }
   393  01AA  178B               	bsf	11,7	;volatile
   394                           
   395                           ;cod.c: 115: }
   396  01AB  170B               	bsf	11,6	;volatile
   397  01AC  158B               	bsf	11,3	;volatile
   398  01AD  1683               	bsf	3,5	;RP0=1, select bank1
   399  01AE  1303               	bcf	3,6	;RP1=0, select bank1
   400  01AF  140C               	bsf	12,0	;volatile
   401  01B0  1283               	bcf	3,5	;RP0=0, select bank0
   402  01B1  1303               	bcf	3,6	;RP1=0, select bank0
   403  01B2  1290               	bcf	16,5	;volatile
   404  01B3  1210               	bcf	16,4	;volatile
   405  01B4  1090               	bcf	16,1	;volatile
   406  01B5  1410               	bsf	16,0	;volatile
   407  01B6  303C               	movlw	60
   408  01B7  008F               	movwf	15	;volatile
   409  01B8  30B0               	movlw	176
   410  01B9  008E               	movwf	14	;volatile
   411  01BA                     l887:
   412  01BA  30F0               	movlw	240
   413  01BB  1683               	bsf	3,5	;RP0=1, select bank1
   414  01BC  1303               	bcf	3,6	;RP1=0, select bank1
   415  01BD  0086               	movwf	6	;volatile
   416  01BE  30F0               	movlw	240
   417  01BF  0087               	movwf	7	;volatile
   418  01C0                     l889:
   419  01C0  0188               	clrf	8	;volatile
   420  01C1                     l891:
   421  01C1  3001               	movlw	1
   422  01C2  1283               	bcf	3,5	;RP0=0, select bank0
   423  01C3  1303               	bcf	3,6	;RP1=0, select bank0
   424  01C4  0086               	movwf	6	;volatile
   425  01C5                     l893:
   426  01C5  3080               	movlw	128
   427  01C6  0087               	movwf	7	;volatile
   428  01C7                     l895:
   429  01C7  0188               	clrf	8	;volatile
   430  01C8                     l84:
   431  01C8                     l85:
   432  01C8  29C8               	goto	l84
   433  01C9  120A  118A  2812   	ljmp	start
   434  01CC                     __end_of_main:
   435                           
   436                           	psect	text1
   437  002B                     __ptext1:	
   438 ;; *************** function _interrupt_function *****************
   439 ;; Defined at:
   440 ;;		line 33 in file "cod.c"
   441 ;; Parameters:    Size  Location     Type
   442 ;;		None
   443 ;; Auto vars:     Size  Location     Type
   444 ;;  number          2    9[COMMON] int 
   445 ;; Return value:  Size  Location     Type
   446 ;;                  1    wreg      void 
   447 ;; Registers used:
   448 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   449 ;; Tracked objects:
   450 ;;		On entry : 0/0
   451 ;;		On exit  : 0/0
   452 ;;		Unchanged: 0/0
   453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   454 ;;      Params:         0       0       0       0       0
   455 ;;      Locals:         2       0       0       0       0
   456 ;;      Temps:          9       0       0       0       0
   457 ;;      Totals:        11       0       0       0       0
   458 ;;Total ram usage:       11 bytes
   459 ;; Hardware stack levels used: 1
   460 ;; This function calls:
   461 ;;		Nothing
   462 ;; This function is called by:
   463 ;;		Interrupt level 1
   464 ;; This function uses a non-reentrant model
   465 ;;
   466                           
   467                           
   468                           ;psect for function _interrupt_function
   469  002B                     _interrupt_function:
   470  002B                     i1l803:
   471                           
   472                           ;cod.c: 35:             case 4:;cod.c: 37:                 break;
   473  002B  1C0B               	btfss	11,0	;volatile
   474  002C  282E               	goto	u8_21
   475  002D  282F               	goto	u8_20
   476  002E                     u8_21:
   477  002E  292E               	goto	i1l853
   478  002F                     u8_20:
   479  002F                     i1l805:
   480                           
   481                           ;cod.c: 38:             case 5:
   482  002F  01F9               	clrf	interrupt_function@number
   483  0030  01FA               	clrf	interrupt_function@number+1
   484  0031                     i1l811:
   485                           
   486                           ;cod.c: 39:                 numbers[step] = display_array[6];
   487  0031  0879               	movf	interrupt_function@number,w
   488  0032  00F0               	movwf	??_interrupt_function
   489  0033  0770               	addwf	??_interrupt_function,w
   490  0034  3E20               	addlw	(low (_keypad_array| 0))& (0+255)
   491  0035  0084               	movwf	4
   492  0036  1383               	bcf	3,7	;select IRP bank0
   493  0037  0800               	movf	0,w
   494  0038  00F1               	movwf	??_interrupt_function+1
   495  0039  0A84               	incf	4,f
   496  003A  0800               	movf	0,w
   497  003B  00F2               	movwf	??_interrupt_function+2
   498  003C  1283               	bcf	3,5	;RP0=0, select bank0
   499  003D  1303               	bcf	3,6	;RP1=0, select bank0
   500  003E  0806               	movf	6,w	;volatile
   501  003F  00F3               	movwf	??_interrupt_function+3
   502  0040  01F4               	clrf	??_interrupt_function+4
   503  0041  0872               	movf	??_interrupt_function+2,w
   504  0042  0674               	xorwf	??_interrupt_function+4,w
   505  0043  1D03               	skipz
   506  0044  2847               	goto	u9_25
   507  0045  0871               	movf	??_interrupt_function+1,w
   508  0046  0673               	xorwf	??_interrupt_function+3,w
   509  0047                     u9_25:
   510  0047  1D03               	skipz
   511  0048  284A               	goto	u9_21
   512  0049  284B               	goto	u9_20
   513  004A                     u9_21:
   514  004A  284C               	goto	i1l815
   515  004B                     u9_20:
   516  004B  28EC               	goto	i1l841
   517  004C                     i1l815:
   518                           
   519                           ;cod.c: 41:             case 6:
   520  004C  3001               	movlw	1
   521  004D  07F9               	addwf	interrupt_function@number,f
   522  004E  1803               	skipnc
   523  004F  0AFA               	incf	interrupt_function@number+1,f
   524  0050  3000               	movlw	0
   525  0051  07FA               	addwf	interrupt_function@number+1,f
   526  0052                     i1l817:
   527  0052  087A               	movf	interrupt_function@number+1,w
   528  0053  3A80               	xorlw	128
   529  0054  00FF               	movwf	btemp+1
   530  0055  3080               	movlw	128
   531  0056  027F               	subwf	btemp+1,w
   532  0057  1D03               	skipz
   533  0058  285B               	goto	u10_25
   534  0059  300C               	movlw	12
   535  005A  0279               	subwf	interrupt_function@number,w
   536  005B                     u10_25:
   537  005B  1C03               	skipc
   538  005C  285E               	goto	u10_21
   539  005D  285F               	goto	u10_20
   540  005E                     u10_21:
   541  005E  2831               	goto	i1l811
   542  005F                     u10_20:
   543  005F  28EC               	goto	i1l841
   544  0060                     i1l819:
   545                           
   546                           ;cod.c: 45:                 numbers[step] = display_array[8];
   547  0060  087B               	movf	_step,w
   548  0061  00F0               	movwf	??_interrupt_function
   549  0062  0770               	addwf	??_interrupt_function,w
   550  0063  3E4C               	addlw	(low (_numbers| 0))& (0+255)
   551  0064  0084               	movwf	4
   552  0065  1283               	bcf	3,5	;RP0=0, select bank0
   553  0066  1303               	bcf	3,6	;RP1=0, select bank0
   554  0067  083A               	movf	_display_array+2,w
   555  0068  1383               	bcf	3,7	;select IRP bank0
   556  0069  0080               	movwf	0
   557  006A  0A84               	incf	4,f
   558  006B  083B               	movf	_display_array+3,w
   559  006C  0080               	movwf	0
   560                           
   561                           ;cod.c: 46:                 break;
   562  006D  2917               	goto	i1l843
   563  006E                     i1l821:
   564                           
   565                           ;cod.c: 48:                 numbers[step] = display_array[9];
   566  006E  087B               	movf	_step,w
   567  006F  00F0               	movwf	??_interrupt_function
   568  0070  0770               	addwf	??_interrupt_function,w
   569  0071  3E4C               	addlw	(low (_numbers| 0))& (0+255)
   570  0072  0084               	movwf	4
   571  0073  1283               	bcf	3,5	;RP0=0, select bank0
   572  0074  1303               	bcf	3,6	;RP1=0, select bank0
   573  0075  083C               	movf	_display_array+4,w
   574  0076  1383               	bcf	3,7	;select IRP bank0
   575  0077  0080               	movwf	0
   576  0078  0A84               	incf	4,f
   577  0079  083D               	movf	_display_array+5,w
   578  007A  0080               	movwf	0
   579                           
   580                           ;cod.c: 49:                 break;
   581  007B  2917               	goto	i1l843
   582  007C                     i1l823:
   583                           
   584                           ;cod.c: 51: 
   585  007C  087B               	movf	_step,w
   586  007D  00F0               	movwf	??_interrupt_function
   587  007E  0770               	addwf	??_interrupt_function,w
   588  007F  3E4C               	addlw	(low (_numbers| 0))& (0+255)
   589  0080  0084               	movwf	4
   590  0081  1283               	bcf	3,5	;RP0=0, select bank0
   591  0082  1303               	bcf	3,6	;RP1=0, select bank0
   592  0083  083E               	movf	_display_array+6,w
   593  0084  1383               	bcf	3,7	;select IRP bank0
   594  0085  0080               	movwf	0
   595  0086  0A84               	incf	4,f
   596  0087  083F               	movf	_display_array+7,w
   597  0088  0080               	movwf	0
   598                           
   599                           ;cod.c: 52:                 break;
   600  0089  2917               	goto	i1l843
   601  008A                     i1l825:
   602                           
   603                           ;cod.c: 54:                 numbers[step] = display_array[0];
   604  008A  087B               	movf	_step,w
   605  008B  00F0               	movwf	??_interrupt_function
   606  008C  0770               	addwf	??_interrupt_function,w
   607  008D  3E4C               	addlw	(low (_numbers| 0))& (0+255)
   608  008E  0084               	movwf	4
   609  008F  1283               	bcf	3,5	;RP0=0, select bank0
   610  0090  1303               	bcf	3,6	;RP1=0, select bank0
   611  0091  0840               	movf	_display_array+8,w
   612  0092  1383               	bcf	3,7	;select IRP bank0
   613  0093  0080               	movwf	0
   614  0094  0A84               	incf	4,f
   615  0095  0841               	movf	_display_array+9,w
   616  0096  0080               	movwf	0
   617                           
   618                           ;cod.c: 55:                 break;
   619  0097  2917               	goto	i1l843
   620  0098                     i1l827:
   621                           
   622                           ;cod.c: 57: 
   623  0098  087B               	movf	_step,w
   624  0099  00F0               	movwf	??_interrupt_function
   625  009A  0770               	addwf	??_interrupt_function,w
   626  009B  3E4C               	addlw	(low (_numbers| 0))& (0+255)
   627  009C  0084               	movwf	4
   628  009D  1283               	bcf	3,5	;RP0=0, select bank0
   629  009E  1303               	bcf	3,6	;RP1=0, select bank0
   630  009F  0842               	movf	_display_array+10,w
   631  00A0  1383               	bcf	3,7	;select IRP bank0
   632  00A1  0080               	movwf	0
   633  00A2  0A84               	incf	4,f
   634  00A3  0843               	movf	_display_array+11,w
   635  00A4  0080               	movwf	0
   636                           
   637                           ;cod.c: 58:                 break;
   638  00A5  2917               	goto	i1l843
   639  00A6                     i1l829:
   640                           
   641                           ;cod.c: 60: 
   642  00A6  087B               	movf	_step,w
   643  00A7  00F0               	movwf	??_interrupt_function
   644  00A8  0770               	addwf	??_interrupt_function,w
   645  00A9  3E4C               	addlw	(low (_numbers| 0))& (0+255)
   646  00AA  0084               	movwf	4
   647  00AB  1283               	bcf	3,5	;RP0=0, select bank0
   648  00AC  1303               	bcf	3,6	;RP1=0, select bank0
   649  00AD  0844               	movf	_display_array+12,w
   650  00AE  1383               	bcf	3,7	;select IRP bank0
   651  00AF  0080               	movwf	0
   652  00B0  0A84               	incf	4,f
   653  00B1  0845               	movf	_display_array+13,w
   654  00B2  0080               	movwf	0
   655                           
   656                           ;cod.c: 61:     step++;
   657  00B3  2917               	goto	i1l843
   658  00B4                     i1l831:
   659                           
   660                           ;cod.c: 63:         step = 0;
   661  00B4  087B               	movf	_step,w
   662  00B5  00F0               	movwf	??_interrupt_function
   663  00B6  0770               	addwf	??_interrupt_function,w
   664  00B7  3E4C               	addlw	(low (_numbers| 0))& (0+255)
   665  00B8  0084               	movwf	4
   666  00B9  1283               	bcf	3,5	;RP0=0, select bank0
   667  00BA  1303               	bcf	3,6	;RP1=0, select bank0
   668  00BB  0846               	movf	_display_array+14,w
   669  00BC  1383               	bcf	3,7	;select IRP bank0
   670  00BD  0080               	movwf	0
   671  00BE  0A84               	incf	4,f
   672  00BF  0847               	movf	_display_array+15,w
   673  00C0  0080               	movwf	0
   674                           
   675                           ;cod.c: 64:     _delay((unsigned long)((1)*(4000000/4000.0)));
   676  00C1  2917               	goto	i1l843
   677  00C2                     i1l833:
   678                           
   679                           ;cod.c: 66:     }
   680  00C2  087B               	movf	_step,w
   681  00C3  00F0               	movwf	??_interrupt_function
   682  00C4  0770               	addwf	??_interrupt_function,w
   683  00C5  3E4C               	addlw	(low (_numbers| 0))& (0+255)
   684  00C6  0084               	movwf	4
   685  00C7  1283               	bcf	3,5	;RP0=0, select bank0
   686  00C8  1303               	bcf	3,6	;RP1=0, select bank0
   687  00C9  0848               	movf	_display_array+16,w
   688  00CA  1383               	bcf	3,7	;select IRP bank0
   689  00CB  0080               	movwf	0
   690  00CC  0A84               	incf	4,f
   691  00CD  0849               	movf	_display_array+17,w
   692  00CE  0080               	movwf	0
   693                           
   694                           ;cod.c: 67: 
   695  00CF  2917               	goto	i1l843
   696  00D0                     i1l835:
   697                           
   698                           ;cod.c: 69: 
   699  00D0  087B               	movf	_step,w
   700  00D1  00F0               	movwf	??_interrupt_function
   701  00D2  0770               	addwf	??_interrupt_function,w
   702  00D3  3E4C               	addlw	(low (_numbers| 0))& (0+255)
   703  00D4  0084               	movwf	4
   704  00D5  1283               	bcf	3,5	;RP0=0, select bank0
   705  00D6  1303               	bcf	3,6	;RP1=0, select bank0
   706  00D7  084A               	movf	_display_array+18,w
   707  00D8  1383               	bcf	3,7	;select IRP bank0
   708  00D9  0080               	movwf	0
   709  00DA  0A84               	incf	4,f
   710  00DB  084B               	movf	_display_array+19,w
   711  00DC  0080               	movwf	0
   712                           
   713                           ;cod.c: 70: 
   714  00DD  2917               	goto	i1l843
   715  00DE                     i1l837:
   716                           
   717                           ;cod.c: 75: 
   718  00DE  087B               	movf	_step,w
   719  00DF  00F0               	movwf	??_interrupt_function
   720  00E0  0770               	addwf	??_interrupt_function,w
   721  00E1  3E4C               	addlw	(low (_numbers| 0))& (0+255)
   722  00E2  0084               	movwf	4
   723  00E3  1283               	bcf	3,5	;RP0=0, select bank0
   724  00E4  1303               	bcf	3,6	;RP1=0, select bank0
   725  00E5  0838               	movf	_display_array,w
   726  00E6  1383               	bcf	3,7	;select IRP bank0
   727  00E7  0080               	movwf	0
   728  00E8  0A84               	incf	4,f
   729  00E9  0839               	movf	_display_array+1,w
   730  00EA  0080               	movwf	0
   731                           
   732                           ;cod.c: 76:         PORTD = display_array[numbers[count]];
   733  00EB  2917               	goto	i1l843
   734  00EC                     i1l841:
   735                           
   736                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   737                           ; Switch size 1, requested type "simple"
   738                           ; Number of cases is 1, Range of values is 0 to 0
   739                           ; switch strategies available:
   740                           ; Name         Instructions Cycles
   741                           ; simple_byte            4     3 (average)
   742                           ; direct_byte           11     8 (fixed)
   743                           ; jumptable            260     6 (fixed)
   744                           ;	Chosen strategy is simple_byte
   745  00EC  087A               	movf	interrupt_function@number+1,w
   746  00ED  3A00               	xorlw	0	; case 0
   747  00EE  1903               	skipnz
   748  00EF  28F1               	goto	i1l927
   749  00F0  2917               	goto	i1l843
   750  00F1                     i1l927:
   751                           
   752                           ; Switch size 1, requested type "simple"
   753                           ; Number of cases is 12, Range of values is 0 to 11
   754                           ; switch strategies available:
   755                           ; Name         Instructions Cycles
   756                           ; simple_byte           37    19 (average)
   757                           ; direct_byte           44     8 (fixed)
   758                           ; jumptable            260     6 (fixed)
   759                           ;	Chosen strategy is simple_byte
   760  00F1  0879               	movf	interrupt_function@number,w
   761  00F2  3A00               	xorlw	0	; case 0
   762  00F3  1903               	skipnz
   763  00F4  2860               	goto	i1l819
   764  00F5  3A01               	xorlw	1	; case 1
   765  00F6  1903               	skipnz
   766  00F7  286E               	goto	i1l821
   767  00F8  3A03               	xorlw	3	; case 2
   768  00F9  1903               	skipnz
   769  00FA  287C               	goto	i1l823
   770  00FB  3A01               	xorlw	1	; case 3
   771  00FC  1903               	skipnz
   772  00FD  288A               	goto	i1l825
   773  00FE  3A07               	xorlw	7	; case 4
   774  00FF  1903               	skipnz
   775  0100  2898               	goto	i1l827
   776  0101  3A01               	xorlw	1	; case 5
   777  0102  1903               	skipnz
   778  0103  28A6               	goto	i1l829
   779  0104  3A03               	xorlw	3	; case 6
   780  0105  1903               	skipnz
   781  0106  28B4               	goto	i1l831
   782  0107  3A01               	xorlw	1	; case 7
   783  0108  1903               	skipnz
   784  0109  28C2               	goto	i1l833
   785  010A  3A0F               	xorlw	15	; case 8
   786  010B  1903               	skipnz
   787  010C  28D0               	goto	i1l835
   788  010D  3A01               	xorlw	1	; case 9
   789  010E  1903               	skipnz
   790  010F  2917               	goto	i1l843
   791  0110  3A03               	xorlw	3	; case 10
   792  0111  1903               	skipnz
   793  0112  28DE               	goto	i1l837
   794  0113  3A01               	xorlw	1	; case 11
   795  0114  1903               	skipnz
   796  0115  2917               	goto	i1l843
   797  0116  2917               	goto	i1l843
   798  0117                     i1l843:
   799                           
   800                           ;cod.c: 82:         }
   801  0117  3001               	movlw	1
   802  0118  07FB               	addwf	_step,f
   803  0119  1803               	skipnc
   804  011A  0AFC               	incf	_step+1,f
   805  011B  3000               	movlw	0
   806  011C  07FC               	addwf	_step+1,f
   807  011D                     i1l845:
   808                           
   809                           ;cod.c: 83: 
   810  011D  3004               	movlw	4
   811  011E  067B               	xorwf	_step,w
   812  011F  047C               	iorwf	_step+1,w
   813  0120  1D03               	btfss	3,2
   814  0121  2923               	goto	u11_21
   815  0122  2924               	goto	u11_20
   816  0123                     u11_21:
   817  0123  2926               	goto	i1l849
   818  0124                     u11_20:
   819  0124                     i1l847:
   820                           
   821                           ;cod.c: 84: 
   822  0124  01FB               	clrf	_step
   823  0125  01FC               	clrf	_step+1
   824  0126                     i1l849:
   825                           
   826                           ;cod.c: 85:         TMR1IF = 0;
   827  0126  30C7               	movlw	199
   828  0127  00F0               	movwf	??_interrupt_function
   829  0128                     u15_27:
   830  0128  2929               	nop2
   831  0129  0BF0               	decfsz	??_interrupt_function,f
   832  012A  2928               	goto	u15_27
   833  012B  292C               	nop2
   834  012C  292D               	nop2
   835  012D                     i1l851:
   836                           
   837                           ;cod.c: 86:         TMR0 = 15536;
   838  012D  100B               	bcf	11,0	;volatile
   839  012E                     i1l853:
   840                           
   841                           ;cod.c: 89: }
   842  012E  1283               	bcf	3,5	;RP0=0, select bank0
   843  012F  1303               	bcf	3,6	;RP1=0, select bank0
   844  0130  1C0C               	btfss	12,0	;volatile
   845  0131  2933               	goto	u12_21
   846  0132  2934               	goto	u12_20
   847  0133                     u12_21:
   848  0133  2969               	goto	i1l79
   849  0134                     u12_20:
   850  0134                     i1l855:
   851                           
   852                           ;cod.c: 92: 
   853  0134  1003               	clrc
   854  0135  0D86               	rlf	6,f	;volatile
   855  0136                     i1l857:
   856                           
   857                           ;cod.c: 93:     GIE = 1;
   858  0136  1D86               	btfss	6,3	;volatile
   859  0137  2939               	goto	u13_21
   860  0138  293A               	goto	u13_20
   861  0139                     u13_21:
   862  0139  293C               	goto	i1l861
   863  013A                     u13_20:
   864  013A                     i1l859:
   865                           
   866                           ;cod.c: 94:     PEIE = 1;
   867  013A  3001               	movlw	1
   868  013B  0086               	movwf	6	;volatile
   869  013C                     i1l861:
   870                           
   871                           ;cod.c: 97: 
   872  013C  0854               	movf	_count,w
   873  013D  00F0               	movwf	??_interrupt_function
   874  013E  0770               	addwf	??_interrupt_function,w
   875  013F  3E4C               	addlw	(low (_numbers| 0))& (0+255)
   876  0140  0084               	movwf	4
   877  0141  1383               	bcf	3,7	;select IRP bank0
   878  0142  0800               	movf	0,w
   879  0143  00F1               	movwf	??_interrupt_function+1
   880  0144  0771               	addwf	??_interrupt_function+1,w
   881  0145  3E38               	addlw	(low (_display_array| 0))& (0+255)
   882  0146  0084               	movwf	4
   883  0147  0800               	movf	0,w
   884  0148  0088               	movwf	8	;volatile
   885  0149                     i1l863:
   886                           
   887                           ;cod.c: 98:     T1CKPS1 = 0;
   888  0149  1003               	clrc
   889  014A  0C87               	rrf	7,f	;volatile
   890  014B                     i1l865:
   891                           
   892                           ;cod.c: 99:     T1CKPS0 = 0;
   893  014B  3001               	movlw	1
   894  014C  07D4               	addwf	_count,f
   895  014D  1803               	skipnc
   896  014E  0AD5               	incf	_count+1,f
   897  014F  3000               	movlw	0
   898  0150  07D5               	addwf	_count+1,f
   899  0151                     i1l867:
   900                           
   901                           ;cod.c: 100:     TMR1CS = 0;
   902  0151  1E07               	btfss	7,4	;volatile
   903  0152  2954               	goto	u14_21
   904  0153  2955               	goto	u14_20
   905  0154                     u14_21:
   906  0154  2959               	goto	i1l873
   907  0155                     u14_20:
   908  0155                     i1l869:
   909                           
   910                           ;cod.c: 101:     TMR1ON = 1;
   911  0155  3080               	movlw	128
   912  0156  0087               	movwf	7	;volatile
   913  0157                     i1l871:
   914                           
   915                           ;cod.c: 102:     TMR1 = 15536;
   916  0157  01D4               	clrf	_count
   917  0158  01D5               	clrf	_count+1
   918  0159                     i1l873:
   919                           
   920                           ;cod.c: 106:     TRISD = 0x00;
   921  0159  100C               	bcf	12,0	;volatile
   922  015A                     i1l875:
   923                           
   924                           ;cod.c: 107: 
   925  015A  30B0               	movlw	176
   926  015B  0081               	movwf	1	;volatile
   927  015C                     i1l877:
   928                           
   929                           ;cod.c: 108: 
   930  015C  3003               	movlw	3
   931  015D  00F2               	movwf	??_interrupt_function+2
   932  015E  308A               	movlw	138
   933  015F  00F1               	movwf	??_interrupt_function+1
   934  0160  3055               	movlw	85
   935  0161  00F0               	movwf	??_interrupt_function
   936  0162                     u16_27:
   937  0162  0BF0               	decfsz	??_interrupt_function,f
   938  0163  2962               	goto	u16_27
   939  0164  0BF1               	decfsz	??_interrupt_function+1,f
   940  0165  2962               	goto	u16_27
   941  0166  0BF2               	decfsz	??_interrupt_function+2,f
   942  0167  2962               	goto	u16_27
   943  0168  2969               	nop2
   944  0169                     i1l79:
   945  0169  0878               	movf	??_interrupt_function+8,w
   946  016A  1283               	bcf	3,5	;RP0=0, select bank0
   947  016B  1303               	bcf	3,6	;RP1=0, select bank0
   948  016C  00FF               	movwf	btemp+1
   949  016D  0877               	movf	??_interrupt_function+7,w
   950  016E  008A               	movwf	10
   951  016F  0876               	movf	??_interrupt_function+6,w
   952  0170  0084               	movwf	4
   953  0171  0E75               	swapf	??_interrupt_function+5,w
   954  0172  0083               	movwf	3
   955  0173  0EFE               	swapf	btemp,f
   956  0174  0E7E               	swapf	btemp,w
   957  0175  0009               	retfie
   958  0176                     __end_of_interrupt_function:
   959  007E                     btemp	set	126	;btemp
   960  007E                     wtemp0	set	126
   961                           
   962                           	psect	intentry
   963  0004                     __pintentry:	
   964                           ;incstack = 0
   965                           ; Regs used in _interrupt_function: [wreg-fsr0h+status,2+status,0+btemp+1]
   966                           
   967  0004                     interrupt_function:
   968  007E                     saved_w	set	btemp
   969  0004  00FE               	movwf	btemp
   970  0005  0E03               	swapf	3,w
   971  0006  00F5               	movwf	??_interrupt_function+5
   972  0007  0804               	movf	4,w
   973  0008  00F6               	movwf	??_interrupt_function+6
   974  0009  080A               	movf	10,w
   975  000A  00F7               	movwf	??_interrupt_function+7
   976  000B  1283               	bcf	3,5	;RP0=0, select bank0
   977  000C  1303               	bcf	3,6	;RP1=0, select bank0
   978  000D  087F               	movf	btemp+1,w
   979  000E  00F8               	movwf	??_interrupt_function+8
   980  000F  120A  118A  282B   	ljmp	_interrupt_function
   981                           
   982                           	psect	config
   983                           
   984                           ;Config register CONFIG @ 0x2007
   985                           ;	Oscillator Selection bits
   986                           ;	FOSC = XT, XT oscillator
   987                           ;	Watchdog Timer Enable bit
   988                           ;	WDTE = OFF, WDT disabled
   989                           ;	Power-up Timer Enable bit
   990                           ;	PWRTE = OFF, PWRT disabled
   991                           ;	FLASH Program Memory Code Protection bits
   992                           ;	CP = OFF, Code protection off
   993                           ;	Brown-out Reset Enable bit
   994                           ;	BOREN = ON, BOR enabled
   995                           ;	Low Voltage In-Circuit Serial Programming Enable bit
   996                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   997                           ;	Data EE Memory Code Protection
   998                           ;	CPD = OFF, Code Protection off
   999                           ;	FLASH Program Memory Write Enable
  1000                           ;	WRT = ON, Unprotected program memory may be written to by EECON control
  1001                           ;	In-Circuit Debugger Mode bit
  1002                           ;	DEBUG = 0x1, unprogrammed default
  1003  2007                     	org	8199
  1004  2007  3FF9               	dw	16377

Data Sizes:
    Strings     0
    Constant    0
    Data        52
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      13
    BANK0            80      0      54
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _interrupt_function in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _interrupt_function in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupt_function in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupt_function in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupt_function in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _interrupt_function                                  11    11      0      90
                                              0 COMMON    11    11      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _interrupt_function (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      36       5       67.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      B       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      43      12        0.0%
ABS                  0      0      43       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Dec 30 15:44:49 2021

                          pc 0002                           l84 01C8                           l85 01C8  
                         fsr 0004                          l891 01C1                          l893 01C5  
                        l885 01AA                          l895 01C7                          l887 01BA  
                        l889 01C0                          _GIE 005F                          _RB3 0033  
                        _RC4 003C                          fsr0 0004                          indf 0000  
                       _PEIE 005E                         _RBIE 005B                         _RBIF 0058  
                       i1l79 0169                         _TMR0 0001                         _TMR1 000E  
                       u8_20 002F                         u8_21 002E                         u9_20 004B  
                       u9_21 004A                         u9_25 0047                         _main 01AA  
                       _step 007B                         btemp 007E                         start 0012  
                      ?_main 0070                        i1l811 0031                        i1l803 002B  
                      i1l821 006E                        i1l805 002F                        i1l831 00B4  
                      i1l823 007C                        i1l815 004C                        i1l833 00C2  
                      i1l825 008A                        i1l817 0052                        i1l841 00EC  
                      i1l851 012D                        i1l835 00D0                        i1l827 0098  
                      i1l843 0117                        i1l819 0060                        i1l861 013C  
                      i1l845 011D                        i1l837 00DE                        i1l829 00A6  
                      i1l853 012E                        i1l871 0157                        i1l863 0149  
                      i1l855 0134                        i1l847 0124                        i1l927 00F1  
                      i1l873 0159                        i1l865 014B                        i1l857 0136  
                      i1l849 0126                        i1l875 015A                        i1l867 0151  
                      i1l859 013A                        i1l877 015C                        i1l869 0155  
                      u10_20 005F                        u10_21 005E                        u10_25 005B  
                      u11_20 0124                        u11_21 0123                        u12_20 0134  
                      u12_21 0133                        u13_20 013A                        u13_21 0139  
                      u14_20 0155                        u14_21 0154                        u15_27 0128  
                      u16_27 0162                        _PORTB 0006                        _PORTC 0007  
                      _PORTD 0008                        _TRISB 0086                        _TRISC 0087  
                      _TRISD 0088   __end_of_interrupt_function 0176                        _count 0054  
                      pclath 000A                        status 0003                        wtemp0 007E  
            __initialization 0015                 __end_of_main 01CC                       ??_main 0000  
                     _TMR1IE 0460                       _TMR1IF 0060                       _TMR1CS 0081  
                     _TMR1ON 0080                       saved_w 007E      __end_of__initialization 0027  
             __pcstackCOMMON 0070                 __pidataBANK0 0176                   __pbssBANK0 0054  
                 __pmaintext 01AA                   __pintentry 0004                      _T1CKPS0 0084  
                    _T1CKPS1 0085           _interrupt_function 002B          ?_interrupt_function 0070  
                    __ptext1 002B                      _numbers 004C         end_of_initialization 0027  
       ??_interrupt_function 0070          start_initialization 0015                   init_fetch0 01CC  
                __pdataBANK0 0020                  __pbssCOMMON 007B                    ___latbits 0002  
              __pcstackBANK0 0000                 _keypad_array 0020            interrupt_function 0004  
__size_of_interrupt_function 014B                __size_of_main 0022     interrupt_function@number 0079  
                   init_ram0 01D0                     intlevel1 0000                _display_array 0038  

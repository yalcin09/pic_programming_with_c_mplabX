

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Dec 30 22:32:49 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,merge=1,delta=2
    11                           	psect	text5,local,class=CODE,merge=1,delta=2
    12                           	psect	text6,local,class=CODE,merge=1,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 12/02/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F877 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0094                     	;# 
    98  0098                     	;# 
    99  0099                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  010F                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108  0000                     	;# 
   109  0001                     	;# 
   110  0002                     	;# 
   111  0003                     	;# 
   112  0004                     	;# 
   113  0005                     	;# 
   114  0006                     	;# 
   115  0007                     	;# 
   116  0008                     	;# 
   117  0009                     	;# 
   118  000A                     	;# 
   119  000B                     	;# 
   120  000C                     	;# 
   121  000D                     	;# 
   122  000E                     	;# 
   123  000E                     	;# 
   124  000F                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0014                     	;# 
   130  0015                     	;# 
   131  0015                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  0019                     	;# 
   136  001A                     	;# 
   137  001B                     	;# 
   138  001B                     	;# 
   139  001C                     	;# 
   140  001D                     	;# 
   141  001E                     	;# 
   142  001F                     	;# 
   143  0081                     	;# 
   144  0085                     	;# 
   145  0086                     	;# 
   146  0087                     	;# 
   147  0088                     	;# 
   148  0089                     	;# 
   149  008C                     	;# 
   150  008D                     	;# 
   151  008E                     	;# 
   152  0091                     	;# 
   153  0092                     	;# 
   154  0093                     	;# 
   155  0094                     	;# 
   156  0098                     	;# 
   157  0099                     	;# 
   158  009E                     	;# 
   159  009F                     	;# 
   160  010C                     	;# 
   161  010D                     	;# 
   162  010E                     	;# 
   163  010F                     	;# 
   164  018C                     	;# 
   165  018D                     	;# 
   166  0000                     	;# 
   167  0001                     	;# 
   168  0002                     	;# 
   169  0003                     	;# 
   170  0004                     	;# 
   171  0005                     	;# 
   172  0006                     	;# 
   173  0007                     	;# 
   174  0008                     	;# 
   175  0009                     	;# 
   176  000A                     	;# 
   177  000B                     	;# 
   178  000C                     	;# 
   179  000D                     	;# 
   180  000E                     	;# 
   181  000E                     	;# 
   182  000F                     	;# 
   183  0010                     	;# 
   184  0011                     	;# 
   185  0012                     	;# 
   186  0013                     	;# 
   187  0014                     	;# 
   188  0015                     	;# 
   189  0015                     	;# 
   190  0016                     	;# 
   191  0017                     	;# 
   192  0018                     	;# 
   193  0019                     	;# 
   194  001A                     	;# 
   195  001B                     	;# 
   196  001B                     	;# 
   197  001C                     	;# 
   198  001D                     	;# 
   199  001E                     	;# 
   200  001F                     	;# 
   201  0081                     	;# 
   202  0085                     	;# 
   203  0086                     	;# 
   204  0087                     	;# 
   205  0088                     	;# 
   206  0089                     	;# 
   207  008C                     	;# 
   208  008D                     	;# 
   209  008E                     	;# 
   210  0091                     	;# 
   211  0092                     	;# 
   212  0093                     	;# 
   213  0094                     	;# 
   214  0098                     	;# 
   215  0099                     	;# 
   216  009E                     	;# 
   217  009F                     	;# 
   218  010C                     	;# 
   219  010D                     	;# 
   220  010E                     	;# 
   221  010F                     	;# 
   222  018C                     	;# 
   223  018D                     	;# 
   224  0008                     _PORTD	set	8
   225  0042                     _RD2	set	66
   226  0040                     _RD0	set	64
   227  0041                     _RD1	set	65
   228  0088                     _TRISD	set	136
   229                           
   230                           	psect	cinit
   231  07FC                     start_initialization:	
   232                           ; #config settings
   233                           
   234  07FC                     __initialization:
   235  07FC                     end_of_initialization:	
   236                           ;End of C runtime variable initialization code
   237                           
   238  07FC                     __end_of__initialization:
   239  07FC  0183               	clrf	3
   240  07FD  120A  118A  2E17   	ljmp	_main	;jump to C main() function
   241                           
   242                           	psect	cstackCOMMON
   243  0070                     __pcstackCOMMON:
   244  0070                     ?_lcd_command:
   245  0070                     ?_wait:	
   246                           ; 1 bytes @ 0x0
   247                           
   248  0070                     ??_wait:	
   249                           ; 1 bytes @ 0x0
   250                           
   251  0070                     ?_send_data:	
   252                           ; 1 bytes @ 0x0
   253                           
   254  0070                     ?_lcd_clean:	
   255                           ; 1 bytes @ 0x0
   256                           
   257  0070                     ?_lcd_prepare:	
   258                           ; 1 bytes @ 0x0
   259                           
   260  0070                     ?_turkishCharacter:	
   261                           ; 1 bytes @ 0x0
   262                           
   263  0070                     ?_main:	
   264                           ; 1 bytes @ 0x0
   265                           
   266                           
   267                           ; 1 bytes @ 0x0
   268  0070                     	ds	1
   269  0071                     ??_lcd_command:
   270  0071                     ??_send_data:	
   271                           ; 1 bytes @ 0x1
   272                           
   273                           
   274                           ; 1 bytes @ 0x1
   275  0071                     	ds	2
   276  0073                     send_data@c:
   277  0073                     lcd_command@c:	
   278                           ; 1 bytes @ 0x3
   279                           
   280                           
   281                           ; 1 bytes @ 0x3
   282  0073                     	ds	1
   283  0074                     ??_lcd_clean:
   284  0074                     ??_turkishCharacter:	
   285                           ; 1 bytes @ 0x4
   286                           
   287                           
   288                           ; 1 bytes @ 0x4
   289  0074                     	ds	2
   290  0076                     ??_lcd_prepare:
   291                           
   292                           ; 1 bytes @ 0x6
   293  0076                     	ds	2
   294  0078                     ??_main:
   295                           
   296                           	psect	maintext
   297  0617                     __pmaintext:	
   298                           ; 1 bytes @ 0x8
   299 ;;
   300 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   301 ;;
   302 ;; *************** function _main *****************
   303 ;; Defined at:
   304 ;;		line 47 in file "main.c"
   305 ;; Parameters:    Size  Location     Type
   306 ;;		None
   307 ;; Auto vars:     Size  Location     Type
   308 ;;		None
   309 ;; Return value:  Size  Location     Type
   310 ;;                  1    wreg      void 
   311 ;; Registers used:
   312 ;;		wreg, status,2, status,0, pclath, cstack
   313 ;; Tracked objects:
   314 ;;		On entry : B00/0
   315 ;;		On exit  : 0/0
   316 ;;		Unchanged: 0/0
   317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   318 ;;      Params:         0       0       0       0       0
   319 ;;      Locals:         0       0       0       0       0
   320 ;;      Temps:          0       0       0       0       0
   321 ;;      Totals:         0       0       0       0       0
   322 ;;Total ram usage:        0 bytes
   323 ;; Hardware stack levels required when called: 4
   324 ;; This function calls:
   325 ;;		_lcd_prepare
   326 ;;		_send_data
   327 ;;		_turkishCharacter
   328 ;; This function is called by:
   329 ;;		Startup code after reset
   330 ;; This function uses a non-reentrant model
   331 ;;
   332                           
   333                           
   334                           ;psect for function _main
   335  0617                     _main:
   336  0617                     l711:	
   337                           ;incstack = 0
   338                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   339                           
   340                           
   341                           ;main.c: 49:     TRISD = 0;
   342  0617  1683               	bsf	3,5	;RP0=1, select bank1
   343  0618  1303               	bcf	3,6	;RP1=0, select bank1
   344  0619  0188               	clrf	8	;volatile
   345                           
   346                           ;main.c: 50:     PORTD = 0;
   347  061A  1283               	bcf	3,5	;RP0=0, select bank0
   348  061B  1303               	bcf	3,6	;RP1=0, select bank0
   349  061C  0188               	clrf	8	;volatile
   350  061D                     l713:
   351                           
   352                           ;main.c: 52:     lcd_prepare();
   353  061D  120A  118A  2697  120A  118A  	fcall	_lcd_prepare
   354  0622                     l715:
   355                           
   356                           ;main.c: 53:     turkishCharacter();
   357  0622  120A  118A  26D5  120A  118A  	fcall	_turkishCharacter
   358  0627                     l717:
   359                           
   360                           ;main.c: 54:     send_data(0);
   361  0627  3000               	movlw	0
   362  0628  120A  118A  266A  120A  118A  	fcall	_send_data
   363  062D                     l719:
   364                           
   365                           ;main.c: 55:     send_data(1);
   366  062D  3001               	movlw	1
   367  062E  120A  118A  266A  120A  118A  	fcall	_send_data
   368  0633                     l721:
   369                           
   370                           ;main.c: 56:     send_data(2);
   371  0633  3002               	movlw	2
   372  0634  120A  118A  266A  120A  118A  	fcall	_send_data
   373  0639                     l56:	
   374                           ;main.c: 58:     while(1);
   375                           
   376  0639                     l57:
   377  0639  2E39               	goto	l56
   378  063A  120A  118A  2800   	ljmp	start
   379  063D                     __end_of_main:
   380                           
   381                           	psect	text1
   382  06D5                     __ptext1:	
   383 ;; *************** function _turkishCharacter *****************
   384 ;; Defined at:
   385 ;;		line 12 in file "main.c"
   386 ;; Parameters:    Size  Location     Type
   387 ;;		None
   388 ;; Auto vars:     Size  Location     Type
   389 ;;		None
   390 ;; Return value:  Size  Location     Type
   391 ;;                  1    wreg      void 
   392 ;; Registers used:
   393 ;;		wreg, status,2, status,0, pclath, cstack
   394 ;; Tracked objects:
   395 ;;		On entry : 0/0
   396 ;;		On exit  : 0/0
   397 ;;		Unchanged: 0/0
   398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   399 ;;      Params:         0       0       0       0       0
   400 ;;      Locals:         0       0       0       0       0
   401 ;;      Temps:          0       0       0       0       0
   402 ;;      Totals:         0       0       0       0       0
   403 ;;Total ram usage:        0 bytes
   404 ;; Hardware stack levels used: 1
   405 ;; Hardware stack levels required when called: 2
   406 ;; This function calls:
   407 ;;		_lcd_command
   408 ;;		_send_data
   409 ;; This function is called by:
   410 ;;		_main
   411 ;; This function uses a non-reentrant model
   412 ;;
   413                           
   414                           
   415                           ;psect for function _turkishCharacter
   416  06D5                     _turkishCharacter:
   417  06D5                     l695:	
   418                           ;incstack = 0
   419                           ; Regs used in _turkishCharacter: [wreg+status,2+status,0+pclath+cstack]
   420                           
   421                           
   422                           ;main.c: 15:     lcd_command(0x40); send_data(14);
   423  06D5  3040               	movlw	64
   424  06D6  120A  118A  263D  120A  118A  	fcall	_lcd_command
   425  06DB  300E               	movlw	14
   426  06DC  120A  118A  266A  120A  118A  	fcall	_send_data
   427                           
   428                           ;main.c: 16:     lcd_command(0x41); send_data(17);
   429  06E1  3041               	movlw	65
   430  06E2  120A  118A  263D  120A  118A  	fcall	_lcd_command
   431  06E7  3011               	movlw	17
   432  06E8  120A  118A  266A  120A  118A  	fcall	_send_data
   433                           
   434                           ;main.c: 17:     lcd_command(0x42); send_data(16);
   435  06ED  3042               	movlw	66
   436  06EE  120A  118A  263D  120A  118A  	fcall	_lcd_command
   437  06F3  3010               	movlw	16
   438  06F4  120A  118A  266A  120A  118A  	fcall	_send_data
   439                           
   440                           ;main.c: 18:     lcd_command(0x43); send_data(16);
   441  06F9  3043               	movlw	67
   442  06FA  120A  118A  263D  120A  118A  	fcall	_lcd_command
   443  06FF  3010               	movlw	16
   444  0700  120A  118A  266A  120A  118A  	fcall	_send_data
   445                           
   446                           ;main.c: 19:     lcd_command(0x44); send_data(16);
   447  0705  3044               	movlw	68
   448  0706  120A  118A  263D  120A  118A  	fcall	_lcd_command
   449  070B  3010               	movlw	16
   450  070C  120A  118A  266A  120A  118A  	fcall	_send_data
   451                           
   452                           ;main.c: 20:     lcd_command(0x45); send_data(21);
   453  0711  3045               	movlw	69
   454  0712  120A  118A  263D  120A  118A  	fcall	_lcd_command
   455  0717  3015               	movlw	21
   456  0718  120A  118A  266A  120A  118A  	fcall	_send_data
   457                           
   458                           ;main.c: 21:     lcd_command(0x46); send_data(14);
   459  071D  3046               	movlw	70
   460  071E  120A  118A  263D  120A  118A  	fcall	_lcd_command
   461  0723  300E               	movlw	14
   462  0724  120A  118A  266A  120A  118A  	fcall	_send_data
   463                           
   464                           ;main.c: 22:     lcd_command(0x47); send_data(0);
   465  0729  3047               	movlw	71
   466  072A  120A  118A  263D  120A  118A  	fcall	_lcd_command
   467  072F  3000               	movlw	0
   468  0730  120A  118A  266A  120A  118A  	fcall	_send_data
   469                           
   470                           ;main.c: 25:     lcd_command(0x48); send_data(14);
   471  0735  3048               	movlw	72
   472  0736  120A  118A  263D  120A  118A  	fcall	_lcd_command
   473  073B  300E               	movlw	14
   474  073C  120A  118A  266A  120A  118A  	fcall	_send_data
   475                           
   476                           ;main.c: 26:     lcd_command(0x49); send_data(0);
   477  0741  3049               	movlw	73
   478  0742  120A  118A  263D  120A  118A  	fcall	_lcd_command
   479  0747  3000               	movlw	0
   480  0748  120A  118A  266A  120A  118A  	fcall	_send_data
   481                           
   482                           ;main.c: 27:     lcd_command(0x4A); send_data(15);
   483  074D  304A               	movlw	74
   484  074E  120A  118A  263D  120A  118A  	fcall	_lcd_command
   485  0753  300F               	movlw	15
   486  0754  120A  118A  266A  120A  118A  	fcall	_send_data
   487                           
   488                           ;main.c: 28:     lcd_command(0x4B); send_data(16);
   489  0759  304B               	movlw	75
   490  075A  120A  118A  263D  120A  118A  	fcall	_lcd_command
   491  075F  3010               	movlw	16
   492  0760  120A  118A  266A  120A  118A  	fcall	_send_data
   493                           
   494                           ;main.c: 29:     lcd_command(0x4C); send_data(19);
   495  0765  304C               	movlw	76
   496  0766  120A  118A  263D  120A  118A  	fcall	_lcd_command
   497  076B  3013               	movlw	19
   498  076C  120A  118A  266A  120A  118A  	fcall	_send_data
   499                           
   500                           ;main.c: 30:     lcd_command(0x4D); send_data(17);
   501  0771  304D               	movlw	77
   502  0772  120A  118A  263D  120A  118A  	fcall	_lcd_command
   503  0777  3011               	movlw	17
   504  0778  120A  118A  266A  120A  118A  	fcall	_send_data
   505                           
   506                           ;main.c: 31:     lcd_command(0x4E); send_data(15);
   507  077D  304E               	movlw	78
   508  077E  120A  118A  263D  120A  118A  	fcall	_lcd_command
   509  0783  300F               	movlw	15
   510  0784  120A  118A  266A  120A  118A  	fcall	_send_data
   511                           
   512                           ;main.c: 32:     lcd_command(0x4F); send_data(0);
   513  0789  304F               	movlw	79
   514  078A  120A  118A  263D  120A  118A  	fcall	_lcd_command
   515  078F  3000               	movlw	0
   516  0790  120A  118A  266A  120A  118A  	fcall	_send_data
   517                           
   518                           ;main.c: 35:     lcd_command(0x50); send_data(4);
   519  0795  3050               	movlw	80
   520  0796  120A  118A  263D  120A  118A  	fcall	_lcd_command
   521  079B  3004               	movlw	4
   522  079C  120A  118A  266A  120A  118A  	fcall	_send_data
   523                           
   524                           ;main.c: 36:     lcd_command(0x51); send_data(0);
   525  07A1  3051               	movlw	81
   526  07A2  120A  118A  263D  120A  118A  	fcall	_lcd_command
   527  07A7  3000               	movlw	0
   528  07A8  120A  118A  266A  120A  118A  	fcall	_send_data
   529                           
   530                           ;main.c: 37:     lcd_command(0x52); send_data(4);
   531  07AD  3052               	movlw	82
   532  07AE  120A  118A  263D  120A  118A  	fcall	_lcd_command
   533  07B3  3004               	movlw	4
   534  07B4  120A  118A  266A  120A  118A  	fcall	_send_data
   535                           
   536                           ;main.c: 38:     lcd_command(0x53); send_data(4);
   537  07B9  3053               	movlw	83
   538  07BA  120A  118A  263D  120A  118A  	fcall	_lcd_command
   539  07BF  3004               	movlw	4
   540  07C0  120A  118A  266A  120A  118A  	fcall	_send_data
   541                           
   542                           ;main.c: 39:     lcd_command(0x54); send_data(4);
   543  07C5  3054               	movlw	84
   544  07C6  120A  118A  263D  120A  118A  	fcall	_lcd_command
   545  07CB  3004               	movlw	4
   546  07CC  120A  118A  266A  120A  118A  	fcall	_send_data
   547                           
   548                           ;main.c: 40:     lcd_command(0x55); send_data(4);
   549  07D1  3055               	movlw	85
   550  07D2  120A  118A  263D  120A  118A  	fcall	_lcd_command
   551  07D7  3004               	movlw	4
   552  07D8  120A  118A  266A  120A  118A  	fcall	_send_data
   553                           
   554                           ;main.c: 41:     lcd_command(0x56); send_data(4);
   555  07DD  3056               	movlw	86
   556  07DE  120A  118A  263D  120A  118A  	fcall	_lcd_command
   557  07E3  3004               	movlw	4
   558  07E4  120A  118A  266A  120A  118A  	fcall	_send_data
   559                           
   560                           ;main.c: 42:     lcd_command(0x57); send_data(0);
   561  07E9  3057               	movlw	87
   562  07EA  120A  118A  263D  120A  118A  	fcall	_lcd_command
   563  07EF  3000               	movlw	0
   564  07F0  120A  118A  266A  120A  118A  	fcall	_send_data
   565                           
   566                           ;main.c: 44:     lcd_command(128);
   567  07F5  3080               	movlw	128
   568  07F6  120A  118A  263D  120A  118A  	fcall	_lcd_command
   569  07FB                     l51:
   570  07FB  0008               	return
   571  07FC                     __end_of_turkishCharacter:
   572                           
   573                           	psect	text2
   574  066A                     __ptext2:	
   575 ;; *************** function _send_data *****************
   576 ;; Defined at:
   577 ;;		line 7 in file "LDC_LIB.c"
   578 ;; Parameters:    Size  Location     Type
   579 ;;  c               1    wreg     unsigned char 
   580 ;; Auto vars:     Size  Location     Type
   581 ;;  c               1    3[COMMON] unsigned char 
   582 ;; Return value:  Size  Location     Type
   583 ;;                  1    wreg      void 
   584 ;; Registers used:
   585 ;;		wreg, status,2, status,0, pclath, cstack
   586 ;; Tracked objects:
   587 ;;		On entry : 0/0
   588 ;;		On exit  : 0/0
   589 ;;		Unchanged: 0/0
   590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   591 ;;      Params:         0       0       0       0       0
   592 ;;      Locals:         1       0       0       0       0
   593 ;;      Temps:          2       0       0       0       0
   594 ;;      Totals:         3       0       0       0       0
   595 ;;Total ram usage:        3 bytes
   596 ;; Hardware stack levels used: 1
   597 ;; Hardware stack levels required when called: 1
   598 ;; This function calls:
   599 ;;		_wait
   600 ;; This function is called by:
   601 ;;		_turkishCharacter
   602 ;;		_main
   603 ;;		_lcd_write
   604 ;; This function uses a non-reentrant model
   605 ;;
   606                           
   607                           
   608                           ;psect for function _send_data
   609  066A                     _send_data:
   610                           
   611                           ;incstack = 0
   612                           ; Regs used in _send_data: [wreg+status,2+status,0+pclath+cstack]
   613                           ;send_data@c stored from wreg
   614  066A  00F3               	movwf	send_data@c
   615  066B                     l667:
   616                           
   617                           ;LDC_LIB.c: 8:     RD1 = 0;
   618  066B  1283               	bcf	3,5	;RP0=0, select bank0
   619  066C  1303               	bcf	3,6	;RP1=0, select bank0
   620  066D  1088               	bcf	8,1	;volatile
   621                           
   622                           ;LDC_LIB.c: 9:     RD0 = 1;
   623  066E  1408               	bsf	8,0	;volatile
   624                           
   625                           ;LDC_LIB.c: 10:     RD2 = 1;
   626  066F  1508               	bsf	8,2	;volatile
   627  0670                     l669:
   628                           
   629                           ;LDC_LIB.c: 11:     PORTD = ((c & 0xF0) | (PORTD & 0x0F));
   630  0670  300F               	movlw	15
   631  0671  0508               	andwf	8,w	;volatile
   632  0672  00F1               	movwf	??_send_data
   633  0673  0873               	movf	send_data@c,w
   634  0674  39F0               	andlw	240
   635  0675  0471               	iorwf	??_send_data,w
   636  0676  0088               	movwf	8	;volatile
   637  0677                     l671:
   638                           
   639                           ;LDC_LIB.c: 12:     RD2 = 0;
   640  0677  1108               	bcf	8,2	;volatile
   641  0678                     l673:
   642                           
   643                           ;LDC_LIB.c: 13:     wait();
   644  0678  120A  118A  2602  120A  118A  	fcall	_wait
   645  067D                     l675:
   646                           
   647                           ;LDC_LIB.c: 14:     RD2 = 1;
   648  067D  1283               	bcf	3,5	;RP0=0, select bank0
   649  067E  1303               	bcf	3,6	;RP1=0, select bank0
   650  067F  1508               	bsf	8,2	;volatile
   651  0680                     l677:
   652                           
   653                           ;LDC_LIB.c: 15:     PORTD = (((c & 0x0F) << 4) | (PORTD & 0x0F));
   654  0680  300F               	movlw	15
   655  0681  0508               	andwf	8,w	;volatile
   656  0682  00F1               	movwf	??_send_data
   657  0683  0873               	movf	send_data@c,w
   658  0684  390F               	andlw	15
   659  0685  00F2               	movwf	??_send_data+1
   660  0686  3003               	movlw	3
   661  0687                     u25:
   662  0687  1003               	clrc
   663  0688  0DF2               	rlf	??_send_data+1,f
   664  0689  3EFF               	addlw	-1
   665  068A  1D03               	skipz
   666  068B  2E87               	goto	u25
   667  068C  1003               	clrc
   668  068D  0D72               	rlf	??_send_data+1,w
   669  068E  0471               	iorwf	??_send_data,w
   670  068F  0088               	movwf	8	;volatile
   671  0690                     l679:
   672                           
   673                           ;LDC_LIB.c: 16:     RD2 = 0;
   674  0690  1108               	bcf	8,2	;volatile
   675                           
   676                           ;LDC_LIB.c: 17:     wait();
   677  0691  120A  118A  2602  120A  118A  	fcall	_wait
   678  0696                     l18:
   679  0696  0008               	return
   680  0697                     __end_of_send_data:
   681                           
   682                           	psect	text3
   683  0697                     __ptext3:	
   684 ;; *************** function _lcd_prepare *****************
   685 ;; Defined at:
   686 ;;		line 39 in file "LDC_LIB.c"
   687 ;; Parameters:    Size  Location     Type
   688 ;;		None
   689 ;; Auto vars:     Size  Location     Type
   690 ;;		None
   691 ;; Return value:  Size  Location     Type
   692 ;;                  1    wreg      void 
   693 ;; Registers used:
   694 ;;		wreg, status,2, status,0, pclath, cstack
   695 ;; Tracked objects:
   696 ;;		On entry : 0/0
   697 ;;		On exit  : 0/0
   698 ;;		Unchanged: 0/0
   699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   700 ;;      Params:         0       0       0       0       0
   701 ;;      Locals:         0       0       0       0       0
   702 ;;      Temps:          2       0       0       0       0
   703 ;;      Totals:         2       0       0       0       0
   704 ;;Total ram usage:        2 bytes
   705 ;; Hardware stack levels used: 1
   706 ;; Hardware stack levels required when called: 3
   707 ;; This function calls:
   708 ;;		_lcd_clean
   709 ;;		_lcd_command
   710 ;; This function is called by:
   711 ;;		_main
   712 ;; This function uses a non-reentrant model
   713 ;;
   714                           
   715                           
   716                           ;psect for function _lcd_prepare
   717  0697                     _lcd_prepare:
   718  0697                     l685:	
   719                           ;incstack = 0
   720                           ; Regs used in _lcd_prepare: [wreg+status,2+status,0+pclath+cstack]
   721                           
   722                           
   723                           ;LDC_LIB.c: 40:     RD0 = 0;
   724  0697  1283               	bcf	3,5	;RP0=0, select bank0
   725  0698  1303               	bcf	3,6	;RP1=0, select bank0
   726  0699  1008               	bcf	8,0	;volatile
   727                           
   728                           ;LDC_LIB.c: 41:     RD1 = 0;
   729  069A  1088               	bcf	8,1	;volatile
   730                           
   731                           ;LDC_LIB.c: 42:     RD2 = 0;
   732  069B  1108               	bcf	8,2	;volatile
   733  069C                     l687:
   734                           
   735                           ;LDC_LIB.c: 43:     _delay((unsigned long)((15)*(4000000/4000.0)));
   736  069C  3014               	movlw	20
   737  069D  00F7               	movwf	??_lcd_prepare+1
   738  069E  3079               	movlw	121
   739  069F  00F6               	movwf	??_lcd_prepare
   740  06A0                     u57:
   741  06A0  0BF6               	decfsz	??_lcd_prepare,f
   742  06A1  2EA0               	goto	u57
   743  06A2  0BF7               	decfsz	??_lcd_prepare+1,f
   744  06A3  2EA0               	goto	u57
   745  06A4  2EA5               	nop2
   746  06A5                     l689:
   747                           
   748                           ;LDC_LIB.c: 44:     RD2 = 1;
   749  06A5  1283               	bcf	3,5	;RP0=0, select bank0
   750  06A6  1303               	bcf	3,6	;RP1=0, select bank0
   751  06A7  1508               	bsf	8,2	;volatile
   752  06A8                     l691:
   753                           
   754                           ;LDC_LIB.c: 45:     lcd_command(0x02);
   755  06A8  3002               	movlw	2
   756  06A9  120A  118A  263D  120A  118A  	fcall	_lcd_command
   757  06AE                     l693:
   758                           
   759                           ;LDC_LIB.c: 46:     _delay((unsigned long)((2)*(4000000/4000.0)));
   760  06AE  3003               	movlw	3
   761  06AF  00F7               	movwf	??_lcd_prepare+1
   762  06B0  3097               	movlw	151
   763  06B1  00F6               	movwf	??_lcd_prepare
   764  06B2                     u67:
   765  06B2  0BF6               	decfsz	??_lcd_prepare,f
   766  06B3  2EB2               	goto	u67
   767  06B4  0BF7               	decfsz	??_lcd_prepare+1,f
   768  06B5  2EB2               	goto	u67
   769  06B6  2EB7               	nop2
   770                           
   771                           ;LDC_LIB.c: 47:     lcd_command(40);
   772  06B7  3028               	movlw	40
   773  06B8  120A  118A  263D  120A  118A  	fcall	_lcd_command
   774                           
   775                           ;LDC_LIB.c: 48:     lcd_command(6);
   776  06BD  3006               	movlw	6
   777  06BE  120A  118A  263D  120A  118A  	fcall	_lcd_command
   778                           
   779                           ;LDC_LIB.c: 49:     lcd_command(12);
   780  06C3  300C               	movlw	12
   781  06C4  120A  118A  263D  120A  118A  	fcall	_lcd_command
   782                           
   783                           ;LDC_LIB.c: 50:     lcd_clean();
   784  06C9  120A  118A  2607  120A  118A  	fcall	_lcd_clean
   785                           
   786                           ;LDC_LIB.c: 51:     lcd_command(128);
   787  06CE  3080               	movlw	128
   788  06CF  120A  118A  263D  120A  118A  	fcall	_lcd_command
   789  06D4                     l35:
   790  06D4  0008               	return
   791  06D5                     __end_of_lcd_prepare:
   792                           
   793                           	psect	text4
   794  0607                     __ptext4:	
   795 ;; *************** function _lcd_clean *****************
   796 ;; Defined at:
   797 ;;		line 20 in file "LDC_LIB.c"
   798 ;; Parameters:    Size  Location     Type
   799 ;;		None
   800 ;; Auto vars:     Size  Location     Type
   801 ;;		None
   802 ;; Return value:  Size  Location     Type
   803 ;;                  1    wreg      void 
   804 ;; Registers used:
   805 ;;		wreg, status,2, status,0, pclath, cstack
   806 ;; Tracked objects:
   807 ;;		On entry : 0/0
   808 ;;		On exit  : 0/0
   809 ;;		Unchanged: 0/0
   810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   811 ;;      Params:         0       0       0       0       0
   812 ;;      Locals:         0       0       0       0       0
   813 ;;      Temps:          2       0       0       0       0
   814 ;;      Totals:         2       0       0       0       0
   815 ;;Total ram usage:        2 bytes
   816 ;; Hardware stack levels used: 1
   817 ;; Hardware stack levels required when called: 2
   818 ;; This function calls:
   819 ;;		_lcd_command
   820 ;; This function is called by:
   821 ;;		_lcd_prepare
   822 ;; This function uses a non-reentrant model
   823 ;;
   824                           
   825                           
   826                           ;psect for function _lcd_clean
   827  0607                     _lcd_clean:
   828  0607                     l681:	
   829                           ;incstack = 0
   830                           ; Regs used in _lcd_clean: [wreg+status,2+status,0+pclath+cstack]
   831                           
   832                           
   833                           ;LDC_LIB.c: 21:     lcd_command(1);
   834  0607  3001               	movlw	1
   835  0608  120A  118A  263D  120A  118A  	fcall	_lcd_command
   836  060D                     l683:
   837                           
   838                           ;LDC_LIB.c: 22:     _delay((unsigned long)((2)*(4000000/4000.0)));
   839  060D  3003               	movlw	3
   840  060E  00F5               	movwf	??_lcd_clean+1
   841  060F  3097               	movlw	151
   842  0610  00F4               	movwf	??_lcd_clean
   843  0611                     u77:
   844  0611  0BF4               	decfsz	??_lcd_clean,f
   845  0612  2E11               	goto	u77
   846  0613  0BF5               	decfsz	??_lcd_clean+1,f
   847  0614  2E11               	goto	u77
   848  0615  2E16               	nop2
   849  0616                     l21:
   850  0616  0008               	return
   851  0617                     __end_of_lcd_clean:
   852                           
   853                           	psect	text5
   854  063D                     __ptext5:	
   855 ;; *************** function _lcd_command *****************
   856 ;; Defined at:
   857 ;;		line 54 in file "LDC_LIB.c"
   858 ;; Parameters:    Size  Location     Type
   859 ;;  c               1    wreg     unsigned char 
   860 ;; Auto vars:     Size  Location     Type
   861 ;;  c               1    3[COMMON] unsigned char 
   862 ;; Return value:  Size  Location     Type
   863 ;;                  1    wreg      void 
   864 ;; Registers used:
   865 ;;		wreg, status,2, status,0, pclath, cstack
   866 ;; Tracked objects:
   867 ;;		On entry : 0/0
   868 ;;		On exit  : 0/0
   869 ;;		Unchanged: 0/0
   870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   871 ;;      Params:         0       0       0       0       0
   872 ;;      Locals:         1       0       0       0       0
   873 ;;      Temps:          2       0       0       0       0
   874 ;;      Totals:         3       0       0       0       0
   875 ;;Total ram usage:        3 bytes
   876 ;; Hardware stack levels used: 1
   877 ;; Hardware stack levels required when called: 1
   878 ;; This function calls:
   879 ;;		_wait
   880 ;; This function is called by:
   881 ;;		_lcd_clean
   882 ;;		_lcd_prepare
   883 ;;		_turkishCharacter
   884 ;;		_lcd_gotoxy
   885 ;; This function uses a non-reentrant model
   886 ;;
   887                           
   888                           
   889                           ;psect for function _lcd_command
   890  063D                     _lcd_command:
   891                           
   892                           ;incstack = 0
   893                           ; Regs used in _lcd_command: [wreg+status,2+status,0+pclath+cstack]
   894                           ;lcd_command@c stored from wreg
   895  063D  00F3               	movwf	lcd_command@c
   896  063E                     l653:
   897                           
   898                           ;LDC_LIB.c: 55:     RD1 = 0;
   899  063E  1283               	bcf	3,5	;RP0=0, select bank0
   900  063F  1303               	bcf	3,6	;RP1=0, select bank0
   901  0640  1088               	bcf	8,1	;volatile
   902                           
   903                           ;LDC_LIB.c: 56:     RD0 = 0;
   904  0641  1008               	bcf	8,0	;volatile
   905                           
   906                           ;LDC_LIB.c: 57:     RD2 = 1;
   907  0642  1508               	bsf	8,2	;volatile
   908  0643                     l655:
   909                           
   910                           ;LDC_LIB.c: 58:     PORTD = ((c & 0xF0) | (PORTD & 0x0F));
   911  0643  300F               	movlw	15
   912  0644  0508               	andwf	8,w	;volatile
   913  0645  00F1               	movwf	??_lcd_command
   914  0646  0873               	movf	lcd_command@c,w
   915  0647  39F0               	andlw	240
   916  0648  0471               	iorwf	??_lcd_command,w
   917  0649  0088               	movwf	8	;volatile
   918  064A                     l657:
   919                           
   920                           ;LDC_LIB.c: 59:     RD2 = 0;
   921  064A  1108               	bcf	8,2	;volatile
   922  064B                     l659:
   923                           
   924                           ;LDC_LIB.c: 60:     wait();
   925  064B  120A  118A  2602  120A  118A  	fcall	_wait
   926  0650                     l661:
   927                           
   928                           ;LDC_LIB.c: 61:     RD2 = 1;
   929  0650  1283               	bcf	3,5	;RP0=0, select bank0
   930  0651  1303               	bcf	3,6	;RP1=0, select bank0
   931  0652  1508               	bsf	8,2	;volatile
   932  0653                     l663:
   933                           
   934                           ;LDC_LIB.c: 62:     PORTD = (((c & 0x0F) << 4) | (PORTD & 0x0F));
   935  0653  300F               	movlw	15
   936  0654  0508               	andwf	8,w	;volatile
   937  0655  00F1               	movwf	??_lcd_command
   938  0656  0873               	movf	lcd_command@c,w
   939  0657  390F               	andlw	15
   940  0658  00F2               	movwf	??_lcd_command+1
   941  0659  3003               	movlw	3
   942  065A                     u15:
   943  065A  1003               	clrc
   944  065B  0DF2               	rlf	??_lcd_command+1,f
   945  065C  3EFF               	addlw	-1
   946  065D  1D03               	skipz
   947  065E  2E5A               	goto	u15
   948  065F  1003               	clrc
   949  0660  0D72               	rlf	??_lcd_command+1,w
   950  0661  0471               	iorwf	??_lcd_command,w
   951  0662  0088               	movwf	8	;volatile
   952  0663                     l665:
   953                           
   954                           ;LDC_LIB.c: 63:     RD2 = 0;
   955  0663  1108               	bcf	8,2	;volatile
   956                           
   957                           ;LDC_LIB.c: 64:     wait();
   958  0664  120A  118A  2602  120A  118A  	fcall	_wait
   959  0669                     l38:
   960  0669  0008               	return
   961  066A                     __end_of_lcd_command:
   962                           
   963                           	psect	text6
   964  0602                     __ptext6:	
   965 ;; *************** function _wait *****************
   966 ;; Defined at:
   967 ;;		line 3 in file "LDC_LIB.c"
   968 ;; Parameters:    Size  Location     Type
   969 ;;		None
   970 ;; Auto vars:     Size  Location     Type
   971 ;;		None
   972 ;; Return value:  Size  Location     Type
   973 ;;                  1    wreg      void 
   974 ;; Registers used:
   975 ;;		wreg
   976 ;; Tracked objects:
   977 ;;		On entry : 0/0
   978 ;;		On exit  : 0/0
   979 ;;		Unchanged: 0/0
   980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   981 ;;      Params:         0       0       0       0       0
   982 ;;      Locals:         0       0       0       0       0
   983 ;;      Temps:          1       0       0       0       0
   984 ;;      Totals:         1       0       0       0       0
   985 ;;Total ram usage:        1 bytes
   986 ;; Hardware stack levels used: 1
   987 ;; This function calls:
   988 ;;		Nothing
   989 ;; This function is called by:
   990 ;;		_send_data
   991 ;;		_lcd_command
   992 ;;		_lcd_write
   993 ;; This function uses a non-reentrant model
   994 ;;
   995                           
   996                           
   997                           ;psect for function _wait
   998  0602                     _wait:
   999  0602                     l651:	
  1000                           ;incstack = 0
  1001                           ; Regs used in _wait: [wreg]
  1002                           
  1003                           
  1004                           ;LDC_LIB.c: 4:     _delay((unsigned long)((250)*(4000000/4000000.0)));
  1005  0602  3053               	movlw	83
  1006  0603  00F0               	movwf	??_wait
  1007  0604                     u87:
  1008  0604  0BF0               	decfsz	??_wait,f
  1009  0605  2E04               	goto	u87
  1010  0606                     l15:
  1011  0606  0008               	return
  1012  0607                     __end_of_wait:
  1013  007E                     btemp	set	126	;btemp
  1014  007E                     wtemp0	set	126
  1015                           
  1016                           	psect	config
  1017                           
  1018                           ;Config register CONFIG @ 0x2007
  1019                           ;	Oscillator Selection bits
  1020                           ;	FOSC = XT, XT oscillator
  1021                           ;	Watchdog Timer Enable bit
  1022                           ;	WDTE = OFF, WDT disabled
  1023                           ;	Power-up Timer Enable bit
  1024                           ;	PWRTE = OFF, PWRT disabled
  1025                           ;	FLASH Program Memory Code Protection bits
  1026                           ;	CP = OFF, Code protection off
  1027                           ;	Brown-out Reset Enable bit
  1028                           ;	BOREN = ON, BOR enabled
  1029                           ;	Low Voltage In-Circuit Serial Programming Enable bit
  1030                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  1031                           ;	Data EE Memory Code Protection
  1032                           ;	CPD = OFF, Code Protection off
  1033                           ;	FLASH Program Memory Write Enable
  1034                           ;	WRT = OFF, Unprotected program memory may not be written to by EECON control
  1035                           ;	In-Circuit Debugger Mode bit
  1036                           ;	DEBUG = 0x1, unprogrammed default
  1037  2007                     	org	8199
  1038  2007  3DF9               	dw	15865

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_lcd_prepare
    _turkishCharacter->_lcd_command
    _turkishCharacter->_send_data
    _send_data->_wait
    _lcd_prepare->_lcd_clean
    _lcd_clean->_lcd_command
    _lcd_command->_wait

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     150
                        _lcd_prepare
                          _send_data
                   _turkishCharacter
 ---------------------------------------------------------------------------------
 (1) _turkishCharacter                                     0     0      0      60
                        _lcd_command
                          _send_data
 ---------------------------------------------------------------------------------
 (2) _send_data                                            3     3      0      30
                                              1 COMMON     3     3      0
                               _wait
 ---------------------------------------------------------------------------------
 (1) _lcd_prepare                                          2     2      0      60
                                              6 COMMON     2     2      0
                          _lcd_clean
                        _lcd_command
 ---------------------------------------------------------------------------------
 (2) _lcd_clean                                            2     2      0      30
                                              4 COMMON     2     2      0
                        _lcd_command
 ---------------------------------------------------------------------------------
 (2) _lcd_command                                          3     3      0      30
                                              1 COMMON     3     3      0
                               _wait
 ---------------------------------------------------------------------------------
 (3) _wait                                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_prepare
     _lcd_clean
       _lcd_command
         _wait
     _lcd_command
   _send_data
     _wait
   _turkishCharacter
     _lcd_command
     _send_data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Dec 30 22:32:49 2021

             ?_lcd_prepare 0070                         l21 0616                         l15 0606  
                       l18 0696                         l35 06D4                         l51 07FB  
                       l38 0669                         l56 0639                         l57 0639  
                       u15 065A                         u25 0687                         u57 06A0  
                       u67 06B2                         u77 0611                         u87 0604  
                      l711 0617                        l721 0633                        l713 061D  
                      l651 0602                        l715 0622                        l661 0650  
                      l653 063E                        l717 0627                        l663 0653  
                      l655 0643                        l671 0677                        l719 062D  
                      l665 0663                        l657 064A                        l681 0607  
                      l673 0678                        l659 064B                        l683 060D  
                      l691 06A8                        l675 067D                        l667 066B  
                      l693 06AE                        l685 0697                        l677 0680  
                      l669 0670                        l687 069C                        l679 0690  
                      l695 06D5                        l689 06A5                        _RD0 0040  
                      _RD1 0041                        _RD2 0042  __size_of_turkishCharacter 0127  
             lcd_command@c 0073                       _main 0617                       _wait 0602  
                     btemp 007E                       start 0000                      ?_main 0070  
                    ?_wait 0070                      _PORTD 0008                      _TRISD 0088  
                    status 0003                      wtemp0 007E            __initialization 07FC  
             __end_of_main 063D               __end_of_wait 0607                     ??_main 0078  
                   ??_wait 0070       __size_of_lcd_command 002D       __size_of_lcd_prepare 003E  
         _turkishCharacter 06D5    __end_of__initialization 07FC             __pcstackCOMMON 0070  
       __size_of_lcd_clean 0010                 __pmaintext 0617         __size_of_send_data 002D  
        __end_of_lcd_clean 0617                    __ptext1 06D5                    __ptext2 066A  
                  __ptext3 0697                    __ptext4 0607                    __ptext5 063D  
                  __ptext6 0602       end_of_initialization 07FC          __end_of_send_data 0697  
 __end_of_turkishCharacter 07FC              ??_lcd_command 0071              ??_lcd_prepare 0076  
      start_initialization 07FC        __end_of_lcd_command 066A        __end_of_lcd_prepare 06D5  
                ___latbits 0002                  _lcd_clean 0607                 send_data@c 0073  
                _send_data 066A                _lcd_command 063D          ?_turkishCharacter 0070  
       ??_turkishCharacter 0074                _lcd_prepare 0697                 ?_lcd_clean 0070  
               ?_send_data 0070              __size_of_main 0026              __size_of_wait 0005  
              ??_lcd_clean 0074                ??_send_data 0071               ?_lcd_command 0070  

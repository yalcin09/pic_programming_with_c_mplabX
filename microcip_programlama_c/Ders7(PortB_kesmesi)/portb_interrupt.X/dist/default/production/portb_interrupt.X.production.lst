

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Dec 27 12:31:51 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F84A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	intentry,global,class=CODE,delta=2
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x4E,2
    11  0000                     
    12                           ; Version 2.20
    13                           ; Generated 12/02/2020 GMT
    14                           ; 
    15                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F84A Definitions
    44                           ; 
    45                           ; SFR Addresses
    46  0000                     	;# 
    47  0001                     	;# 
    48  0002                     	;# 
    49  0003                     	;# 
    50  0004                     	;# 
    51  0005                     	;# 
    52  0006                     	;# 
    53  0008                     	;# 
    54  0009                     	;# 
    55  000A                     	;# 
    56  000B                     	;# 
    57  0081                     	;# 
    58  0085                     	;# 
    59  0086                     	;# 
    60  0088                     	;# 
    61  0089                     	;# 
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  0081                     	;# 
    74  0085                     	;# 
    75  0086                     	;# 
    76  0088                     	;# 
    77  0089                     	;# 
    78  0005                     _PORTA	set	5
    79  0031                     _RB1	set	49
    80  005B                     _RBIE	set	91
    81  005F                     _GIE	set	95
    82  0028                     _RA0	set	40
    83  0037                     _RB7	set	55
    84  0036                     _RB6	set	54
    85  0035                     _RB5	set	53
    86  0034                     _RB4	set	52
    87  0058                     _RBIF	set	88
    88  0086                     _TRISB	set	134
    89  0085                     _TRISA	set	133
    90                           
    91                           	psect	cinit
    92  000C                     start_initialization:	
    93                           ; #config settings
    94                           
    95  000C                     __initialization:
    96  000C                     end_of_initialization:	
    97                           ;End of C runtime variable initialization code
    98                           
    99  000C                     __end_of__initialization:
   100  000C  0183               	clrf	3
   101  000D  2843               	ljmp	_main	;jump to C main() function
   102                           
   103                           	psect	cstackBANK0
   104  000C                     __pcstackBANK0:
   105  000C                     ?_interrupts_function:
   106  000C                     ??_interrupts_function:	
   107                           ; 1 bytes @ 0x0
   108                           
   109  000C                     ?_main:	
   110                           ; 1 bytes @ 0x0
   111                           
   112                           
   113                           ; 1 bytes @ 0x0
   114  000C                     	ds	5
   115  0011                     ??_main:
   116                           
   117                           ; 1 bytes @ 0x5
   118  0011                     	ds	2
   119                           
   120                           	psect	maintext
   121  0043                     __pmaintext:	
   122 ;;
   123 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   124 ;;
   125 ;; *************** function _main *****************
   126 ;; Defined at:
   127 ;;		line 28 in file "portb_interrupt.c"
   128 ;; Parameters:    Size  Location     Type
   129 ;;		None
   130 ;; Auto vars:     Size  Location     Type
   131 ;;		None
   132 ;; Return value:  Size  Location     Type
   133 ;;                  1    wreg      void 
   134 ;; Registers used:
   135 ;;		wreg, status,2
   136 ;; Tracked objects:
   137 ;;		On entry : B00/0
   138 ;;		On exit  : 0/0
   139 ;;		Unchanged: 0/0
   140 ;; Data sizes:     COMMON   BANK0
   141 ;;      Params:         0       0
   142 ;;      Locals:         0       0
   143 ;;      Temps:          0       2
   144 ;;      Totals:         0       2
   145 ;;Total ram usage:        2 bytes
   146 ;; Hardware stack levels required when called: 1
   147 ;; This function calls:
   148 ;;		Nothing
   149 ;; This function is called by:
   150 ;;		Startup code after reset
   151 ;; This function uses a non-reentrant model
   152 ;;
   153                           
   154                           
   155                           ;psect for function _main
   156  0043                     _main:
   157  0043                     l664:	
   158                           ;incstack = 0
   159                           ; Regs used in _main: [wreg+status,2]
   160                           
   161                           
   162                           ;portb_interrupt.c: 30: }
   163  0043  178B               	bsf	11,7	;volatile
   164  0044  158B               	bsf	11,3	;volatile
   165  0045                     l666:
   166  0045  1683               	bsf	3,5	;RP0=1, select bank1
   167  0046  0185               	clrf	5	;volatile
   168  0047                     l668:
   169  0047  30F0               	movlw	240
   170  0048  0086               	movwf	6	;volatile
   171  0049                     l670:
   172  0049  1283               	bcf	3,5	;RP0=0, select bank0
   173  004A  0185               	clrf	5	;volatile
   174  004B                     l672:
   175  004B  1283               	bcf	3,5	;RP0=0, select bank0
   176  004C  1086               	bcf	6,1	;volatile
   177  004D  3082               	movlw	130
   178  004E  0092               	movwf	??_main+1
   179  004F  30DD               	movlw	221
   180  0050  0091               	movwf	??_main
   181  0051                     u77:
   182  0051  0B91               	decfsz	??_main,f
   183  0052  2851               	goto	u77
   184  0053  0B92               	decfsz	??_main+1,f
   185  0054  2851               	goto	u77
   186  0055  2856               	nop2
   187  0056                     l674:
   188  0056  1283               	bcf	3,5	;RP0=0, select bank0
   189  0057  1486               	bsf	6,1	;volatile
   190  0058  3082               	movlw	130
   191  0059  0092               	movwf	??_main+1
   192  005A  30DD               	movlw	221
   193  005B  0091               	movwf	??_main
   194  005C                     u87:
   195  005C  0B91               	decfsz	??_main,f
   196  005D  285C               	goto	u87
   197  005E  0B92               	decfsz	??_main+1,f
   198  005F  285C               	goto	u87
   199  0060  2861               	nop2
   200  0061  284B               	goto	l672
   201  0062  280B               	ljmp	start
   202  0063                     __end_of_main:
   203                           
   204                           	psect	text1
   205  000E                     __ptext1:	
   206 ;; *************** function _interrupts_function *****************
   207 ;; Defined at:
   208 ;;		line 19 in file "portb_interrupt.c"
   209 ;; Parameters:    Size  Location     Type
   210 ;;		None
   211 ;; Auto vars:     Size  Location     Type
   212 ;;		None
   213 ;; Return value:  Size  Location     Type
   214 ;;                  1    wreg      void 
   215 ;; Registers used:
   216 ;;		wreg, status,2, status,0
   217 ;; Tracked objects:
   218 ;;		On entry : 0/0
   219 ;;		On exit  : 0/0
   220 ;;		Unchanged: 0/0
   221 ;; Data sizes:     COMMON   BANK0
   222 ;;      Params:         0       0
   223 ;;      Locals:         0       0
   224 ;;      Temps:          0       5
   225 ;;      Totals:         0       5
   226 ;;Total ram usage:        5 bytes
   227 ;; Hardware stack levels used: 1
   228 ;; This function calls:
   229 ;;		Nothing
   230 ;; This function is called by:
   231 ;;		Interrupt level 1
   232 ;; This function uses a non-reentrant model
   233 ;;
   234                           
   235                           
   236                           ;psect for function _interrupts_function
   237  000E                     _interrupts_function:
   238  000E                     i1l654:
   239                           
   240                           ;portb_interrupt.c: 20: 
   241  000E  180B               	btfsc	11,0	;volatile
   242  000F  2811               	goto	u4_21
   243  0010  2813               	goto	u4_20
   244  0011                     u4_21:
   245  0011  3001               	movlw	1
   246  0012  2814               	goto	u4_22
   247  0013                     u4_20:
   248  0013  3000               	movlw	0
   249  0014                     u4_22:
   250  0014  008C               	movwf	??_interrupts_function
   251  0015  3000               	movlw	0
   252  0016  1A06               	btfsc	6,4	;volatile
   253  0017  3801               	iorlw	1
   254  0018  1A86               	btfsc	6,5	;volatile
   255  0019  3801               	iorlw	1
   256  001A  1B06               	btfsc	6,6	;volatile
   257  001B  3801               	iorlw	1
   258  001C  1B86               	btfsc	6,7	;volatile
   259  001D  3801               	iorlw	1
   260  001E  3800               	iorlw	0
   261  001F  1D03               	skipz
   262  0020  2822               	goto	u5_21
   263  0021  2824               	goto	u5_20
   264  0022                     u5_21:
   265  0022  3001               	movlw	1
   266  0023  2825               	goto	u5_22
   267  0024                     u5_20:
   268  0024  3000               	movlw	0
   269  0025                     u5_22:
   270  0025  050C               	andwf	??_interrupts_function,w
   271  0026  3800               	iorlw	0
   272  0027  1903               	skipnz
   273  0028  282A               	goto	u6_21
   274  0029  282B               	goto	u6_20
   275  002A                     u6_21:
   276  002A  283B               	goto	i1l662
   277  002B                     u6_20:
   278  002B                     i1l656:
   279                           
   280                           ;portb_interrupt.c: 21:     while(1){
   281  002B  1405               	bsf	5,0	;volatile
   282  002C                     i1l658:
   283                           
   284                           ;portb_interrupt.c: 22: 
   285  002C  300B               	movlw	11
   286  002D  008E               	movwf	??_interrupts_function+2
   287  002E  3026               	movlw	38
   288  002F  008D               	movwf	??_interrupts_function+1
   289  0030  305D               	movlw	93
   290  0031  008C               	movwf	??_interrupts_function
   291  0032                     u9_27:
   292  0032  0B8C               	decfsz	??_interrupts_function,f
   293  0033  2832               	goto	u9_27
   294  0034  0B8D               	decfsz	??_interrupts_function+1,f
   295  0035  2832               	goto	u9_27
   296  0036  0B8E               	decfsz	??_interrupts_function+2,f
   297  0037  2832               	goto	u9_27
   298  0038  2839               	nop2
   299  0039                     i1l660:
   300                           
   301                           ;portb_interrupt.c: 23:         RB1 = 0;
   302  0039  1283               	bcf	3,5	;RP0=0, select bank0
   303  003A  1005               	bcf	5,0	;volatile
   304  003B                     i1l662:
   305                           
   306                           ;portb_interrupt.c: 25:         RB1 = 1;
   307  003B  100B               	bcf	11,0	;volatile
   308  003C                     i1l32:
   309  003C  0810               	movf	??_interrupts_function+4,w
   310  003D  008A               	movwf	10
   311  003E  0E0F               	swapf	??_interrupts_function+3,w
   312  003F  0083               	movwf	3
   313  0040  0ECE               	swapf	btemp,f
   314  0041  0E4E               	swapf	btemp,w
   315  0042  0009               	retfie
   316  0043                     __end_of_interrupts_function:
   317  004E                     btemp	set	78	;btemp
   318  004E                     wtemp0	set	78
   319                           
   320                           	psect	intentry
   321  0004                     __pintentry:	
   322                           ;incstack = 0
   323                           ; Regs used in _interrupts_function: [wreg+status,2+status,0]
   324                           
   325  0004                     interrupt_function:
   326  004E                     saved_w	set	btemp
   327  0004  00CE               	movwf	btemp
   328  0005  0E03               	swapf	3,w
   329  0006  1283               	bcf	3,5	;RP0=0, select bank0
   330  0007  008F               	movwf	??_interrupts_function+3
   331  0008  080A               	movf	10,w
   332  0009  0090               	movwf	??_interrupts_function+4
   333  000A  280E               	ljmp	_interrupts_function
   334                           
   335                           	psect	config
   336                           
   337                           ;Config register CONFIG @ 0x2007
   338                           ;	Oscillator Selection bits
   339                           ;	FOSC = XT, XT oscillator
   340                           ;	Watchdog Timer
   341                           ;	WDTE = OFF, WDT disabled
   342                           ;	Power-up Timer Enable bit
   343                           ;	PWRTE = OFF, Power-up Timer is disabled
   344                           ;	Code Protection bit
   345                           ;	CP = OFF, Code protection disabled
   346  2007                     	org	8199
   347  2007  3FF9               	dw	16377

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            66      7       7

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _interrupts_function in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _interrupts_function in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              5 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _interrupts_function                                  5     5      0       0
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _interrupts_function (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              40      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               42      7       7       3       10.6%
ABS                  0      0       0       4        0.0%
BITBANK0            42      0       0       5        0.0%
DATA                 0      0       0       6        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Dec 27 12:31:51 2021

       ??_interrupts_function 000C                            u77 0051                            u87 005C  
                         l670 0049                           l672 004B                           l664 0043  
                         l674 0056                           l666 0045                           l668 0047  
                         _GIE 005F                           _RA0 0028                           _RB1 0031  
                         _RB4 0034                           _RB5 0035                           _RB6 0036  
                         _RB7 0037                          _RBIE 005B                          i1l32 003C  
                        _RBIF 0058                          u4_20 0013                          u4_21 0011  
                        u4_22 0014                          u5_20 0024                          u5_21 0022  
                        u5_22 0025                          u6_20 002B                          u6_21 002A  
                        u9_27 0032                          _main 0043                          btemp 004E  
                        start 000B                         ?_main 000C                         i1l660 0039  
                       i1l662 003B                         i1l654 000E                         i1l656 002B  
                       i1l658 002C                         _PORTA 0005                         _TRISA 0085  
                       _TRISB 0086                         pclath 000A                         status 0003  
                       wtemp0 004E               __initialization 000C                  __end_of_main 0063  
                      ??_main 0011                        saved_w 004E       __end_of__initialization 000C  
 __end_of_interrupts_function 0043                    __pmaintext 0043                    __pintentry 0004  
                     __ptext1 000E          end_of_initialization 000C           start_initialization 000C  
                   ___latbits 0000                 __pcstackBANK0 000C  __size_of_interrupts_function 0035  
           interrupt_function 0004                 __size_of_main 0020           _interrupts_function 000E  
                    intlevel1 0000          ?_interrupts_function 000C  
